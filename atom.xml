<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Pipi`Blog🍉🍉</title>
  
  <subtitle>欢迎大家的访问哦❤</subtitle>
  <link href="https://love.pipi1002.fun/atom.xml" rel="self"/>
  
  <link href="https://love.pipi1002.fun/"/>
  <updated>2023-02-23T09:40:52.096Z</updated>
  <id>https://love.pipi1002.fun/</id>
  
  <author>
    <name>Pipi</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>EXAM-NOTE-C++</title>
    <link href="https://love.pipi1002.fun/2023/02/23/EXAM-NOTE-C++/"/>
    <id>https://love.pipi1002.fun/2023/02/23/EXAM-NOTE-C++/</id>
    <published>2023-02-23T09:40:52.000Z</published>
    <updated>2023-02-23T09:40:52.096Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>C++Project</title>
    <link href="https://love.pipi1002.fun/2023/02/23/C++Project/"/>
    <id>https://love.pipi1002.fun/2023/02/23/C++Project/</id>
    <published>2023-02-23T02:38:33.000Z</published>
    <updated>2023-02-23T09:14:51.285Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C-语言程序设计"><a href="#C-语言程序设计" class="headerlink" title="C++语言程序设计"></a>C++语言程序设计</h1><h2 id="五只小猪称体重-在一个数组中找到最大值"><a href="#五只小猪称体重-在一个数组中找到最大值" class="headerlink" title="五只小猪称体重(在一个数组中找到最大值)"></a>五只小猪称体重(在一个数组中找到最大值)</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> arr[<span class="number">5</span>]=&#123;<span class="number">300</span>,<span class="number">350</span>,<span class="number">200</span>,<span class="number">400</span>,<span class="number">250</span>&#125;</span><br><span class="line"><span class="comment">//算法：认定MAX为最大值，访问数组中每个元素，如果这个元素比我认定的最大值大，则更新最大值</span></span><br><span class="line">    <span class="type">int</span> MAX=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(arr[i]&gt;MAX)</span><br><span class="line">        &#123;</span><br><span class="line">            MAX=arr[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//打印最大值</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;最重的小猪体重为:&quot;</span>&lt;&lt;MAX&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>；</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="数组元素逆置-如原数组元素为1，2，3，4，5逆置后输出结果为5，4，3，2，1"><a href="#数组元素逆置-如原数组元素为1，2，3，4，5逆置后输出结果为5，4，3，2，1" class="headerlink" title="数组元素逆置(如原数组元素为1，2，3，4，5逆置后输出结果为5，4，3，2，1)"></a>数组元素逆置(如原数组元素为1，2，3，4，5逆置后输出结果为5，4，3，2，1)</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> start=<span class="number">0</span>;<span class="comment">//起始元素的下标</span></span><br><span class="line">    <span class="type">int</span> end=<span class="built_in">sizeof</span>(arr)/<span class="built_in">sizeof</span>(arr[<span class="number">0</span>]<span class="number">-1</span>);<span class="comment">//末尾元素下标</span></span><br><span class="line">    <span class="keyword">while</span>(start&lt;end)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">//start和end下标元素进行互换(创建临时变量)</span></span><br><span class="line">      <span class="type">int</span> temp=arr[start];</span><br><span class="line">      arr[start]=arr[end];</span><br><span class="line">      arr[end]=temp;</span><br><span class="line">      atart++;</span><br><span class="line">      end--;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;数组元素更新后：&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;arr[i]&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=" "></a> </h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ios&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;C-语言程序设计&quot;&gt;&lt;a href=&quot;#C-语言程序设计&quot; class=&quot;headerlink&quot; title=&quot;C++语言程序设计&quot;&gt;&lt;/a&gt;C++语言程序设计&lt;/h1&gt;&lt;h2 id=&quot;五只小猪称体重-在一个数组中找到最大值&quot;&gt;&lt;a href=&quot;#五只小猪称体重-</summary>
      
    
    
    
    <category term="C语言基础笔记" scheme="https://love.pipi1002.fun/categories/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>文章</title>
    <link href="https://love.pipi1002.fun/2023/01/02/%E6%96%87%E7%AB%A0/"/>
    <id>https://love.pipi1002.fun/2023/01/02/%E6%96%87%E7%AB%A0/</id>
    <published>2023-01-02T04:38:42.000Z</published>
    <updated>2023-01-02T05:04:35.170Z</updated>
    
    <content type="html"><![CDATA[<h3 id="夕阳"><a href="#夕阳" class="headerlink" title="夕阳"></a>夕阳</h3><p>我们虽然不生活在一起，但是我们拥有同一片天空，我们或许曾同一时间抬头，那我们目光所交汇处便是回忆。</p><p><img src="https://s1.vika.cn/space/2023/01/02/74a659748b6b46c48d116395ededc5e9" alt="mmexport1671530955562"></p><p><img src="https://s1.vika.cn/space/2023/01/02/4784ae9585874a4ca26f3ab803c8a10a" alt="mmexport1671530945556"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;夕阳&quot;&gt;&lt;a href=&quot;#夕阳&quot; class=&quot;headerlink&quot; title=&quot;夕阳&quot;&gt;&lt;/a&gt;夕阳&lt;/h3&gt;&lt;p&gt;我们虽然不生活在一起，但是我们拥有同一片天空，我们或许曾同一时间抬头，那我们目光所交汇处便是回忆。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;htt</summary>
      
    
    
    
    <category term="随想" scheme="https://love.pipi1002.fun/categories/%E9%9A%8F%E6%83%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>EXAM-NOTE-C语言</title>
    <link href="https://love.pipi1002.fun/2022/11/20/EXAM-NOTE-C%E8%AF%AD%E8%A8%80/"/>
    <id>https://love.pipi1002.fun/2022/11/20/EXAM-NOTE-C%E8%AF%AD%E8%A8%80/</id>
    <published>2022-11-20T12:44:51.000Z</published>
    <updated>2023-02-23T05:56:56.377Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-有以下程序-输出的结果为"><a href="#1-有以下程序-输出的结果为" class="headerlink" title="1.有以下程序,输出的结果为"></a>1.有以下程序,输出的结果为</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="built_in">main</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> p[<span class="number">20</span>]=&#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>&#125;,q[]=<span class="string">&quot;abc&quot;</span>,r[]=<span class="string">&quot;abcde&quot;</span>;</span><br><span class="line">    <span class="built_in">strcpy</span>(p+<span class="built_in">stlen</span>(q),r);<span class="comment">//(p+strlen(q)):意思是多出3(strlen(q))个字符来储存p的前三个字符,strcpy本来是全部覆盖，然后现在从第四个开始覆盖</span></span><br><span class="line">    <span class="comment">//此时数组p内的内容变为&#123;a,b,c,a,b,c,d,e,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0,\0&#125;</span></span><br><span class="line">    <span class="built_in">strcat</span>(p,q);<span class="comment">//数组p内容变为&#123;a,b,c,a,b,c,d,e,a,b,c,\0,\0,\0,\0,\0,\0,\0,\0,\0&#125;</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,<span class="built_in">sizeof</span>(p),<span class="built_in">strlen</span>(p));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>[ ] 20 9</li><li>[ ] 9 9</li><li>[x] 20 11</li><li>[ ] 11 11</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//strcpy会把/0也复制到新的数组中</span></span><br><span class="line"><span class="comment">//strlen会在看到(第一个)/0时停止计数</span></span><br><span class="line">设有</span><br><span class="line"><span class="type">static</span> <span class="type">char</span> str[ ]=<span class="string">&quot;Beijing&quot;</span>;</span><br><span class="line">则执行</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">strlen</span>(<span class="built_in">strcpy</span>(str,<span class="string">&quot;China&quot;</span>)));</span><br><span class="line">后的输出结果为  <span class="comment">//A</span></span><br></pre></td></tr></table></figure><ul><li>[x] 5</li><li>[ ] 7</li><li>[ ] 12</li><li>[ ] 14</li></ul><h5 id="注意点："><a href="#注意点：" class="headerlink" title="注意点："></a>注意点：</h5><ul><li><p>sizeof:计算数组(变量)所占空间大小,注意，\0也是一个字符——-操作符</p></li><li><p>strlen:求字符串长度，到\0就停止，并且\0不算字符串内容，strlen也不把\0计算到字符串长度中</p><p>例子：</p><ul><li><p>char arr1[]=”abc”;</p><p>char arr2[]={‘a’,’b’,’c’};</p><p>printf(“%d\n”,sizeof(arr1));//4</p><p>printf(“%d\n”,sizeof(arr2));//3</p><p>printf(“%d\n”,strlen(arr1));//3</p><p>printf(“%d\n”,strlen(arr2));//15(随机数)，因为找不到\0,字符串后才有\0</p></li></ul></li><li><p>注意：sizeof求所占空间大小算的是比特位，如果是char类型就×1相当于其中字符个数</p></li><li><p>int arr[]={1,2,3,4}   如果是int类型的就要×4</p><ul><li>sizeof(arr)=4×4=16(bit位)</li></ul></li></ul><h6 id="数组长度的计算方法：-size-sizeof-arr-sizeof-arr-0"><a href="#数组长度的计算方法：-size-sizeof-arr-sizeof-arr-0" class="headerlink" title="数组长度的计算方法： size=sizeof(arr)/sizeof(arr[0])"></a>数组长度的计算方法： size=sizeof(arr)/sizeof(arr[0])</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">已有定义：<span class="type">char</span> a[ ]= ″xyz″,b[ ]=&#123; ′x′, ′y′, ′z′&#125;;</span><br><span class="line"><span class="comment">//所以a的长度为4，因为a后面默认是有\0的；b的长度为3</span></span><br></pre></td></tr></table></figure><h2 id="2-下列程序输出结果是"><a href="#2-下列程序输出结果是" class="headerlink" title="2.下列程序输出结果是"></a>2.下列程序输出结果是</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> w[][<span class="number">10</span>]=&#123;<span class="string">&quot;ABCD&quot;</span>,<span class="string">&quot;EFGH&quot;</span>,<span class="string">&quot;IJKL&quot;</span>,<span class="string">&quot;MNOP&quot;</span>&#125;;</span><br><span class="line">    <span class="type">int</span> k;</span><br><span class="line">    <span class="keyword">for</span>(k=<span class="number">1</span>;k&lt;<span class="number">3</span>;k++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,&amp;w[k][k]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解答：FGHKL，%s指输出字符串，所以从起始位置到此行结束的所有字符都将被输出</p><h2 id="3-下列程序输出结果是"><a href="#3-下列程序输出结果是" class="headerlink" title="3.下列程序输出结果是"></a>3.下列程序输出结果是</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">char</span> str[<span class="number">30</span>];</span><br><span class="line"><span class="built_in">strcpy</span>(&amp;str[<span class="number">0</span>],<span class="string">&quot;NEXT&quot;</span>);</span><br><span class="line"><span class="built_in">strcpy</span>(&amp;str[<span class="number">1</span>]),<span class="string">&quot;OR&quot;</span>);</span><br><span class="line"><span class="built_in">strcpy</span>(&amp;str[<span class="number">2</span>],<span class="string">&quot;TICE&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,str);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> w[][<span class="number">10</span>]=&#123;<span class="string">&quot;ABCD&quot;</span>,<span class="string">&quot;EFGH&quot;</span>,<span class="string">&quot;IJKL&quot;</span>,<span class="string">&quot;MNOP&quot;</span>&#125;;</span><br><span class="line">    <span class="type">int</span> k;</span><br><span class="line">    <span class="keyword">for</span>(k=<span class="number">1</span>;k&lt;<span class="number">3</span>;k++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,&amp;w[k][k]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1.解答：NOTICE</p><p>注意：数组名通常情况下代表首元素地址（2种情况例外）</p><ul><li>sizeof(数组名)：此时数组名表示整个数组，sizeof(数组名)计算的是整个数组的大小</li><li>&amp;数组名：代表整个数组，&amp;数组名，取出的是整个数组的地址</li><li>strcpy是全部覆盖</li></ul><p>2.解答：FGHKL</p><p>注意：因为输出的是%s的字符串类型，所以会输出头后所有的，一连串输出</p><h2 id="4-以下程序输出结果是"><a href="#4-以下程序输出结果是" class="headerlink" title="4.以下程序输出结果是"></a>4.以下程序输出结果是</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> a=<span class="number">30</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,(a/<span class="number">3</span>&gt;<span class="number">0</span>)?a/<span class="number">10</span>:a%s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>[ ] 0</p></li><li><p>[ ] 1</p></li><li><p>[ ] 10</p></li><li><p>[x] 3</p></li><li><p>三目运算符的运算顺序是从右到左，当a/3是真的就输出a/10;当a/3为假那么输出a%3，因为a/3是判断语句不是赋值语句，所以a/3=10，但是a还是30</p></li></ul><h2 id="5-if-a-5-是允许的"><a href="#5-if-a-5-是允许的" class="headerlink" title="5.if(a=5)是允许的"></a>5.if(a=5)是允许的</h2><h2 id="6-以下语句的输出结果是："><a href="#6-以下语句的输出结果是：" class="headerlink" title="6.以下语句的输出结果是："></a>6.以下语句的输出结果是：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">char s[10];</span><br><span class="line">s=&quot;abcd&quot;;</span><br><span class="line">printf(&quot;%s\n&quot;,s);</span><br></pre></td></tr></table></figure><ul><li>[ ] 输出abcd</li><li>[ ] 输出a</li><li>[x] 出现编译错误</li><li>[ ] 输出bcd</li></ul><p>注意：C语言中无字符串变量，不能直接用赋值语句对一个数组整体赋值</p><h2 id="7-野指针-写代码时极易出现的错误"><a href="#7-野指针-写代码时极易出现的错误" class="headerlink" title="7.野指针(写代码时极易出现的错误)"></a>7.野指针(写代码时极易出现的错误)</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//野指针1</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//未初始化的指针变量（非法访问）</span></span><br><span class="line"><span class="type">int</span>* p;<span class="comment">//局部变量不初始化，里面默认放的是一个随机值</span></span><br><span class="line">*p = <span class="number">20</span>;<span class="comment">//相当于把20放在了内存中随机的一块地址</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;<span class="comment">//当编写程序的时候不知道当时要给指针赋予什么样的值那么 int* p=NULL; (void *)0，把0强制转换成void *xing</span></span><br><span class="line"><span class="comment">//野指针2：指针越界访问</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">10</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span>* p = a;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">12</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">*p = i;(*p++=i)</span><br><span class="line">p++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//返回局部变量或临时变量的地址</span></span><br><span class="line"><span class="function"><span class="type">int</span>* <span class="title">text</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;<span class="comment">//局部变量的存在，只在所在大括号内</span></span><br><span class="line"><span class="keyword">return</span> &amp;a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span>* p = <span class="built_in">text</span>();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, *p);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8-以下程序输出结果是："><a href="#8-以下程序输出结果是：" class="headerlink" title="8. 以下程序输出结果是："></a>8. 以下程序输出结果是：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">main</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a[]=&#123;<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>&#125;,*p=a,i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">        a[i]=*p++;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a[<span class="number">2</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>[x] 6</li><li>[ ] 8</li><li>[ ] 4</li><li>[ ] 2</li></ul><p>注意：<em>p++运算等价于 </em>(p++),先运算地址增值再解引用操作，但由于是p++,所以是先赋值后＋1</p><h2 id="9-以下函数的类型是"><a href="#9-以下函数的类型是" class="headerlink" title="9.以下函数的类型是"></a>9.以下函数的类型是</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">fff</span>(<span class="type">float</span> x)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,x*x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>[ ] 与参数x的类型相同</li><li>[ ] void型</li><li>[x] int型</li><li>[ ] 无法决定</li></ul><p>注意：只有int类型可以省略在函数名前，是否返回值是取决于项目目的，void类型基本不返回返回值，其他类型也可能没有返回值。</p><h2 id="10-下列程序的输出结果是"><a href="#10-下列程序的输出结果是" class="headerlink" title="10.下列程序的输出结果是"></a>10.下列程序的输出结果是</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">fun</span>(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> c)</span><br><span class="line">&#123;</span><br><span class="line">    c=a*b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">main</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> c;</span><br><span class="line">    <span class="built_in">fun</span>(<span class="number">2</span>,<span class="number">3</span>,c);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>[ ] 0</li><li>[ ] 1</li><li>[ ] 6</li><li>[x] 无确定值</li></ul><p>注意：变量c进入func函数后并没有输出，也没有返回值，并且处理的数据只能在该函数体范围内有效，所以无法确定输出结果</p><h2 id="11-以下不能正确定义二维数组的选项是"><a href="#11-以下不能正确定义二维数组的选项是" class="headerlink" title="11.以下不能正确定义二维数组的选项是"></a>11.以下不能正确定义二维数组的选项是</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">2</span>][<span class="number">2</span>]=&#123;&#123;<span class="number">1</span>&#125;,&#123;<span class="number">2</span>&#125;&#125;;   <span class="comment">//对 </span></span><br><span class="line"><span class="type">int</span> a[][<span class="number">2</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;    <span class="comment">//对</span></span><br><span class="line"><span class="type">int</span> a[<span class="number">2</span>][<span class="number">2</span>]=&#123;&#123;<span class="number">1</span>&#125;,&#123;<span class="number">2</span>,<span class="number">3</span>&#125;&#125;; <span class="comment">//对</span></span><br><span class="line"><span class="type">int</span> a[<span class="number">2</span>][]=&#123;&#123;<span class="number">1</span>,<span class="number">2</span>&#125;,&#123;<span class="number">3</span>,<span class="number">4</span>&#125;&#125;;<span class="comment">//错</span></span><br></pre></td></tr></table></figure><ul><li>注意：在定义二维数组时，如果对所有元素赋初值，其第1维的长度可以省略</li><li>二维数组初始化也可以只对每一行或若干个行的前若干元素赋初值</li><li>在二维数组定义中不能省略第二维的长度</li></ul><h2 id="12-以下程序的输出结果为"><a href="#12-以下程序的输出结果为" class="headerlink" title="12.以下程序的输出结果为"></a>12.以下程序的输出结果为</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a=<span class="number">30</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,(aa/<span class="number">3</span>&gt;<span class="number">0</span>)?a/<span class="number">10</span>:a%<span class="number">3</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="13-指针在C语言中的规定"><a href="#13-指针在C语言中的规定" class="headerlink" title="13.指针在C语言中的规定"></a>13.指针在C语言中的规定</h2><p>注意：C语言规定，允许指向数组元素的指针与指向数组最后一个元素后面的那个内存位置比较，但是不允许与指向第一个元素之前的那个内存位置的指针进行比较 </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N_VALUES 5</span></span><br><span class="line"><span class="type">float</span> values[N_VALUES];</span><br><span class="line"><span class="type">float</span> *vp;</span><br><span class="line"><span class="keyword">for</span>(vp=&amp;values[<span class="number">0</span>];vp&lt;&amp;values[N_VALUES];)</span><br><span class="line">&#123;</span><br><span class="line">    *vp++=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N_VALUES 5</span></span><br><span class="line"><span class="type">float</span> values[N_VALUES];</span><br><span class="line"><span class="type">float</span> *vp;</span><br><span class="line"><span class="keyword">for</span>(vp=&amp;values[N_VALUES<span class="number">-1</span>];vp&gt;=&amp;values[<span class="number">0</span>];vp--)</span><br><span class="line">&#123;</span><br><span class="line">    *vp=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//相比于第二种写法更建议第一种写法</span></span><br></pre></td></tr></table></figure><h2 id="14-指针与数组"><a href="#14-指针与数组" class="headerlink" title="14.指针与数组"></a>14.指针与数组</h2><ul><li>注意：一般情况下数组名指的就是首元素地址，但是有两个例外：<ul><li>1.&amp;arr- &amp;数组名- 数组名不是首元素的地址-数组名表示的是整个数组-&amp;数组名，取出的是整个数组的地址</li><li>sizeof(arr)-sizeof(数组名)-数组名表示的是整个数组-sizeof(数组名)计算的是整个数组的大小</li></ul></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> arr[<span class="number">10</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>,arr);<span class="comment">//1.首元素的地址00EFF8E0</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>,arr+<span class="number">1</span>);<span class="comment">//00EFF8E4</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>,&amp;arr[<span class="number">0</span>]);<span class="comment">//2.首元素地址00EFF8E0</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>,&amp;arr[<span class="number">0</span>]+<span class="number">1</span>);<span class="comment">//00EFF8E4</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>,&amp;arr);<span class="comment">//全部元素地址，虽然打印出来和1,2相同为00EFF8E0，但意义不同</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>,&amp;arr+<span class="number">1</span>);<span class="comment">//00EFF908(与00EFF8E0相差40，因为跳过一整个数组地址)</span></span><br></pre></td></tr></table></figure><h2 id="15-以下函数有几个实参"><a href="#15-以下函数有几个实参" class="headerlink" title="15.以下函数有几个实参"></a>15.以下函数有几个实参</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exece</span>((v1,v2),(v3,v4),v5,v6)</span><br></pre></td></tr></table></figure><p>注意：(v1,v2)和(v3,v4)是两个逗号表达式，结果分别为v2,v4所以一共有4个实参</p><h2 id="16-栈，堆"><a href="#16-栈，堆" class="headerlink" title="16.栈，堆"></a>16.栈，堆</h2><ul><li>栈上保存局部变量和函数形参</li><li>堆上保存全局变量</li></ul><h2 id="17-下列代码打印出的结果为："><a href="#17-下列代码打印出的结果为：" class="headerlink" title="17.下列代码打印出的结果为："></a>17.下列代码打印出的结果为：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> arr[]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;</span><br><span class="line">    <span class="type">short</span> *p=(<span class="type">short</span>*)arr;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        *(p+i)=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：将数组arr的首元素地址强制转换为short类型（short类型为2个字节），所以（*p+i）赋值给了数组元素中1，2的这8个字节（先赋值元素1的前两个字节，后赋值1的后两个字节，元素2同理）</p><ul><li>[ ] 1 2 3 4 5</li><li>[x] 0 0 3 4 5</li><li>[ ] 0 0 0 0 5</li><li>[ ] 1 0 0 0 0</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a=<span class="number">0</span>×<span class="number">11223344</span>;</span><br><span class="line">    <span class="type">char</span> *pc=(<span class="type">char</span>*)&amp;a;</span><br><span class="line">    *pc=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%x\n&quot;</span>,a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>内存块的存放方法：倒着存放44 33 22 11一共4个字节（44，33，22，11分别占位一个字节）,但是打印时要复原地址顺序</li><li><p>char*只能访问一个字节</p></li><li><p>[ ] 00223344</p></li><li>[ ] 0</li><li>[x] 11223300</li><li>[ ] 112233</li></ul><h2 id="18-下列代码打印出来的结果是"><a href="#18-下列代码打印出来的结果是" class="headerlink" title="18.下列代码打印出来的结果是"></a>18.下列代码打印出来的结果是</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> i;<span class="comment">//全局变量未初始化默认初始化为0</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    i--;</span><br><span class="line">    <span class="keyword">if</span>(i&gt;<span class="built_in">sizeof</span>(i))<span class="comment">//sizeof-计算变量/类型所占内存的大小，恒&gt;0(不可能返回负数),为无符号数，一个整数和无符号数进行运算（比较大小，或者加减乘除）的时候，会把这个整数转换为无符号数，再进行计算。</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;&gt;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;&lt;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：-1：10000000000000000000000000000001  源码</p><p>​                   11111111111111111111111111111110  反码</p><p>​                   11111111111111111111111111111111  补码</p><ul><li>[x] 大于</li><li>[ ] 小于</li></ul><h2 id="19-正确的执行结果是"><a href="#19-正确的执行结果是" class="headerlink" title="19.正确的执行结果是"></a>19.正确的执行结果是</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(i&lt;=<span class="number">2</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,i++);</span><br></pre></td></tr></table></figure><ul><li>[x] 程序陷入死循环</li><li>[ ] 4</li><li>[ ] 2</li><li>[ ] 3</li></ul><p>注意：while();这是一个没有执行语句的while循环：；的位置</p><h2 id="20-以下程序的输出结果是"><a href="#20-以下程序的输出结果是" class="headerlink" title="20.以下程序的输出结果是"></a>20.以下程序的输出结果是</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="built_in">main</span>()</span><br><span class="line">&#123; <span class="type">int</span>  i=<span class="number">010</span> , j = <span class="number">10</span>;  <span class="comment">//010是八进制数，十进制数为8</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d,%d\n&quot;</span>,+ +i , j - -); &#125;  <span class="comment">//9，10</span></span><br><span class="line"><span class="comment">//八进制的整数都是以0开头，十六进制的整数以0x开头，在C语言中只有十进制数有负数</span></span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> c=<span class="string">&#x27;\72&#x27;</span>;</span><br><span class="line"><span class="comment">//其中、72代表一个字符，72是八进制数，代表ASCII码值的字符&quot;:&quot;</span></span><br></pre></td></tr></table></figure><h2 id="21-以下程序的输出结果是"><a href="#21-以下程序的输出结果是" class="headerlink" title="21.以下程序的输出结果是"></a>21.以下程序的输出结果是</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">main</span>()</span><br><span class="line">&#123; <span class="type">int</span>  a=<span class="number">4</span>,b=<span class="number">5</span>,c=<span class="number">0</span>,d;</span><br><span class="line">d=!a&amp;&amp;!b||!c;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,d);</span><br><span class="line">&#125;  <span class="comment">//1</span></span><br></pre></td></tr></table></figure><ul><li><p>常用的运算符优先级(由高到低)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">!     ++     --</span><br><span class="line"></span><br><span class="line">×     /       %(要求运算时必须为整形)</span><br><span class="line"></span><br><span class="line">+     -</span><br><span class="line"></span><br><span class="line">＞   ＜     ≥      ≤</span><br><span class="line"></span><br><span class="line">==   !=</span><br><span class="line"></span><br><span class="line">&amp;&amp;</span><br><span class="line"></span><br><span class="line">||</span><br><span class="line"></span><br><span class="line">?:</span><br><span class="line"></span><br><span class="line">+=   -=   *=    </span><br><span class="line"></span><br><span class="line">=</span><br><span class="line"></span><br><span class="line">,</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">设有语句<span class="type">int</span>  a=<span class="number">3</span>;则执行了语句a+=a-=a*a;后，变量a的值是 <span class="number">-12</span><span class="comment">//+=和-=的运算按顺序从右向左</span></span><br></pre></td></tr></table></figure><h2 id="22-下列程序的运行结果是"><a href="#22-下列程序的运行结果是" class="headerlink" title="22.下列程序的运行结果是"></a>22.下列程序的运行结果是</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">fun</span><span class="params">(<span class="type">int</span> *a, <span class="type">int</span> *b)</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="type">int</span> *k;</span><br><span class="line">   k=a; a=b; b=k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">main</span>()</span><br><span class="line">&#123;  <span class="type">int</span> a=<span class="number">3</span>, b=<span class="number">6</span>, *x=&amp;a, *y=&amp;b;</span><br><span class="line">   <span class="built_in">fun</span>(x,y);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>, a, b);</span><br><span class="line">&#125;   </span><br></pre></td></tr></table></figure><ul><li><p>结果是： 3    6</p></li><li><h5 id="形参都是值传递，但是这个值是指针的话，是可以改变指针指向内容的值，即实参的值。但是要弄清两个概念：指针和指针指向的数据。这个例子中形参的值是实参的地址，并不是实参的值，所以形参的值的改变只是指针的改变，即指向数据的地址改变，并不是指针指向数据的改变。"><a href="#形参都是值传递，但是这个值是指针的话，是可以改变指针指向内容的值，即实参的值。但是要弄清两个概念：指针和指针指向的数据。这个例子中形参的值是实参的地址，并不是实参的值，所以形参的值的改变只是指针的改变，即指向数据的地址改变，并不是指针指向数据的改变。" class="headerlink" title="形参都是值传递，但是这个值是指针的话，是可以改变指针指向内容的值，即实参的值。但是要弄清两个概念：指针和指针指向的数据。这个例子中形参的值是实参的地址，并不是实参的值，所以形参的值的改变只是指针的改变，即指向数据的地址改变，并不是指针指向数据的改变。"></a>形参都是值传递，但是这个值是指针的话，是可以改变指针指向内容的值，即实参的值。但是要弄清两个概念：指针和指针指向的数据。这个例子中形参的值是实参的地址，并不是实参的值，所以形参的值的改变只是指针的改变，即指向数据的地址改变，并不是指针指向数据的改变。</h5></li></ul><h2 id="23-执行下面程序中的输出语句后，变量-a-的值为-逗号表达式"><a href="#23-执行下面程序中的输出语句后，变量-a-的值为-逗号表达式" class="headerlink" title="23.执行下面程序中的输出语句后，变量 a 的值为(逗号表达式)"></a>23.执行下面程序中的输出语句后，变量 a 的值为(逗号表达式)</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="built_in">main</span> ( ) </span><br><span class="line">&#123;  <span class="type">int</span>  a ;  <span class="built_in">printf</span> ( “ %d \n ”,  ( a = <span class="number">3</span> * <span class="number">5</span> ,  a * <span class="number">4</span> ,  a + <span class="number">5</span> ) ) ;  &#125;  <span class="comment">//a=15</span></span><br></pre></td></tr></table></figure><ul><li>x=表达式1，表达式2，表达式3；</li></ul><p>因为逗号表达式是优先级最低的表达式，赋值表达式的优先级高，所以会把表达式1的值直接赋值给x</p><ul><li>x=(表达式1，表达式2，表达式3)；</li></ul><p>括号里的先执行，逗号表达式是左结合性，所以会从左往右依次执行，最后再把表达式3的值赋给x</p><h2 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h2><p>上面的题是求变量a的值，如果上面的例题变为，求逗号表达式a=2×6，a×3，a＋5的值</p><p>逗号表达式的结果是整个表达式执行完最后的一个值</p><h5 id="可以把这个式子看成x-a-2×6，a×3，a-5-a-2×6-12，这时表达式的式子为12；a×3并不是一个赋值语句，表达式的值还是12；最后x-a-5-12-5-17-该表达式为17"><a href="#可以把这个式子看成x-a-2×6，a×3，a-5-a-2×6-12，这时表达式的式子为12；a×3并不是一个赋值语句，表达式的值还是12；最后x-a-5-12-5-17-该表达式为17" class="headerlink" title="可以把这个式子看成x=(a=2×6，a×3，a+5)    a=2×6=12，这时表达式的式子为12；a×3并不是一个赋值语句，表达式的值还是12；最后x=(a+5)=12+5=17;该表达式为17"></a>可以把这个式子看成x=(a=2×6，a×3，a+5)    a=2×6=12，这时表达式的式子为12；a×3并不是一个赋值语句，表达式的值还是12；最后x=(a+5)=12+5=17;该表达式为17</h5><h6 id="应用："><a href="#应用：" class="headerlink" title="应用："></a>应用：</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">func</span>((exp1,exp2),(exp3,exp4,exp5))  <span class="comment">//2个实参</span></span><br></pre></td></tr></table></figure><p>上述函数调用语句中有几个实参？   2个</p><h2 id="24-以下程序的输出结果是"><a href="#24-以下程序的输出结果是" class="headerlink" title="24.以下程序的输出结果是"></a>24.以下程序的输出结果是</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="built_in">main</span>()</span><br><span class="line">&#123; <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="literal">NULL</span>); &#125;  <span class="comment">//0</span></span><br></pre></td></tr></table></figure><h2 id="25-C语言中的定义问题"><a href="#25-C语言中的定义问题" class="headerlink" title="25.C语言中的定义问题"></a>25.C语言中的定义问题</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1.C语言的基本单位位是函数</span><br><span class="line">2.在宏定义 #define PI 3.14159中，用宏名PI代替是字符串</span><br><span class="line">3.C语言规定，程序中各函数之间既允许直接递归调用也允许间接递归调用</span><br><span class="line">4.指针的算数运算(p为指针变量，px为另一个指针变量)(两个基本类型相同的指针变量不能进行加法运算)</span><br><span class="line">  +    p+n     指针向地址大的方向移动n给数据</span><br><span class="line">  -    p-n     指针向地址小的方向移动n个数据</span><br><span class="line">  ++   p++或++p  指针向地址大的方向移动一个数据</span><br><span class="line">  --   p--或--p  指针向地址小的方向移动一个数据</span><br><span class="line">  -    p-px    注意:两个指针相隔元素的个数</span><br><span class="line">5.C语言程序的三种基本结构是顺序结构、选择结构和循环结构</span><br><span class="line">6.在C语言的条件判断语句中可用任意的表达式来决定分支的流程</span><br><span class="line">7.在C语言中数字029是一个非法数</span><br></pre></td></tr></table></figure><h2 id="26-或逻辑短路和与逻辑短路"><a href="#26-或逻辑短路和与逻辑短路" class="headerlink" title="26.或逻辑短路和与逻辑短路"></a>26.或逻辑短路和与逻辑短路</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">设 a=<span class="number">5</span>, b=<span class="number">6</span>, c=<span class="number">7</span>, d=<span class="number">8</span>, m=<span class="number">2</span>, n=<span class="number">2</span>, 执行</span><br><span class="line">(m=a&gt;b)&amp;&amp;(n=c&gt;d)</span><br><span class="line">后n的值为  <span class="comment">//BBB</span></span><br><span class="line"><span class="comment">//短路问题的结论”或(||)“逻辑前面为1，”与(&amp;&amp;)”逻辑前面为0就会短路</span></span><br><span class="line">    <span class="number">1.</span>或逻辑短路</span><br><span class="line">   <span class="type">int</span> <span class="built_in">main</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a=<span class="number">5</span>,b=<span class="number">6</span>,c=<span class="number">7</span>,d=<span class="number">8</span>,m=<span class="number">2</span>,n=<span class="number">2</span>;</span><br><span class="line">    (m=a&lt;b)||(n=c&gt;d);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\t%d&quot;</span>,m,n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//的结果为1,2,因为a&lt;b,m=1,这个或逻辑就被“短路”掉了,后面的语句就没有执行，所以n还是等于原来的2.||只要有一个为1，结果就为1.因此短路，并且不计算(n=c&gt;d)</span></span><br><span class="line">    <span class="number">2.</span>与逻辑短路</span><br><span class="line">   <span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> a=<span class="number">5</span>,b=<span class="number">6</span>,c=<span class="number">7</span>,d=<span class="number">8</span>,m=<span class="number">2</span>,n=<span class="number">2</span>;</span><br><span class="line">        (m=a&gt;b)&amp;&amp;(n=c&gt;d);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\t%d&quot;</span>,m,n);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//结果为0，2，因为a&gt;b为0，m=0,整个“与”逻辑就判断为”假“所以后面的“n=c&gt;d”就被忽略掉了，所以n还是等于原来的2</span></span><br><span class="line"><span class="comment">//另外：标准的逻辑与(|)与逻辑或(&amp;),无论第一个表达式为真还是假都计算第二个表达式</span></span><br></pre></td></tr></table></figure><ul><li>[ ] 1</li><li>[x] 2</li><li>[ ] 3</li><li>[ ] 4</li></ul><h2 id="27-隐式转换问题"><a href="#27-隐式转换问题" class="headerlink" title="27.隐式转换问题"></a>27.隐式转换问题</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">若有定义：<span class="type">int</span> a=<span class="number">8</span>，b=<span class="number">5</span>，C；，执行语句C=a/b+<span class="number">0.4</span>;后，c的值为<span class="comment">//B</span></span><br></pre></td></tr></table></figure><ul><li>[ ] 1.4</li><li>[x] 1</li><li>[ ] 2.0</li><li>[ ] 2</li></ul><h6 id="注意：-1"><a href="#注意：-1" class="headerlink" title="注意："></a>注意：</h6><p>在使用赋值运算符的时候，当赋值号右边数据类型和左边数据类型不相同时，系统将自动将赋值号右边数据转换成与左边数据相同的数据类型，然后再赋值（这里不是四舍五入，而是取整操作）</p><h2 id="28-固定位宽问题"><a href="#28-固定位宽问题" class="headerlink" title="28.固定位宽问题"></a>28.固定位宽问题</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">以下程序段的输出结果是__C___。</span><br><span class="line"><span class="type">int</span>  a=<span class="number">1234</span>；</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%2d\n&quot;</span>,a);  <span class="comment">//1234</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%2d&quot;</span>,<span class="number">1</span>);  <span class="comment">//输出_1(_代表空格)</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%2d&quot;</span>,<span class="number">102</span>);  <span class="comment">//输出102</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%2d&quot;</span>,<span class="number">12.23</span>);  <span class="comment">//输出12(强制类型转换，即取整数部分)</span></span><br></pre></td></tr></table></figure><ul><li>[ ] 12</li><li>[ ] 34</li><li>[x] 1234</li><li>[ ] 错误</li></ul><h2 id="29-不同类型变量进行运算规则"><a href="#29-不同类型变量进行运算规则" class="headerlink" title="29.不同类型变量进行运算规则"></a>29.不同类型变量进行运算规则</h2><h6 id="系统有默认的转化规则，就是从精度低的转化为精度高的，避免计算时精度的丢失"><a href="#系统有默认的转化规则，就是从精度低的转化为精度高的，避免计算时精度的丢失" class="headerlink" title="系统有默认的转化规则，就是从精度低的转化为精度高的，避免计算时精度的丢失"></a>系统有默认的转化规则，就是从精度低的转化为精度高的，避免计算时精度的丢失</h6><p>具体转化规则如下：</p><p>char—-&gt;short—-&gt;int—-&gt;unsigned(无符号数)—-&gt;long—-&gt;unsigned long—-&gt;float—-&gt;double</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">设有整型变量a，单精度型变量f，双精度型变量x，则表达式a+’b’+x*f值的类型为  </span><br></pre></td></tr></table></figure><ul><li>[ ] int</li><li>[ ] float</li><li>[x] double</li><li>[ ] 不能确定</li></ul><h2 id="30-和-的运算"><a href="#30-和-的运算" class="headerlink" title="30.%和/的运算"></a>30.%和/的运算</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">语句<span class="keyword">if</span>(<span class="number">3</span>/<span class="number">4</span>&gt;<span class="number">1</span>/<span class="number">2</span>) a=<span class="number">1</span>; <span class="keyword">else</span> a=<span class="number">0</span>;执行该语句后，a的值是   <span class="comment">//0</span></span><br><span class="line">    <span class="comment">//在C语言中3/4 (1/2)等于0;3%4 (1%2)等于3 (1)</span></span><br></pre></td></tr></table></figure><h2 id="31-合法实性常数的判断规则"><a href="#31-合法实性常数的判断规则" class="headerlink" title="31.合法实性常数的判断规则"></a>31.合法实性常数的判断规则</h2><p>实型常量又称实数或浮点数，在C语言中可以用两种形式来表示一个实型常量1.小数形式2.指数形式</p><p>在C语言中，以“e”或E后跟一个整数来代表以十为底的幂数。其一般形式是aEn，其中a为十进制数，n为十进制整数</p><h6 id="注意：-2"><a href="#注意：-2" class="headerlink" title="注意："></a>注意：</h6><p>C语言规定字母e或E之前必须要有数字，且e或E后面的数只能是整数</p><figure class="highlight c++"><figcaption><span>以下选项中合法的实型常数是</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">以下选项中合法的实型常数是 <span class="comment">//3</span></span><br><span class="line">    <span class="number">1.</span>  <span class="number">5E2</span><span class="number">.0</span></span><br><span class="line">    <span class="number">2.</span>  E<span class="number">-3</span></span><br><span class="line">    <span class="number">3.</span>  <span class="number">2E0</span></span><br><span class="line">    <span class="number">4.</span>  <span class="number">1.3</span>E</span><br></pre></td></tr></table></figure><h2 id="32"><a href="#32" class="headerlink" title="32."></a>32.</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-有以下程序-输出的结果为&quot;&gt;&lt;a href=&quot;#1-有以下程序-输出的结果为&quot; class=&quot;headerlink&quot; title=&quot;1.有以下程序,输出的结果为&quot;&gt;&lt;/a&gt;1.有以下程序,输出的结果为&lt;/h2&gt;&lt;figure class=&quot;highlight </summary>
      
    
    
    
    <category term="C语言基础笔记" scheme="https://love.pipi1002.fun/categories/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://love.pipi1002.fun/2022/11/20/hello-world/"/>
    <id>https://love.pipi1002.fun/2022/11/20/hello-world/</id>
    <published>2022-11-20T11:41:33.417Z</published>
    <updated>2023-02-23T02:45:51.818Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h6 id="大学生活是人生不可磨灭的记忆，你的每一次尝试，每一声叹息，每一次牵手，都在大学四年的日子里沉淀为永恒。-大学是我们每一个人梦想的殿堂，为了来到这个殿堂我们经历了风风雨雨。-既然跨进了这道门槛，那么就让我们在这梦想的殿堂里尽情的挥洒个性吧。-大学不是幻想，不是梦想，更不是妄想，而是我们伟大的理想。-只要我们为之奋斗，为之拼搏。-总有一天我们会满载而归的-那时你会听到枫叶流舟，你会看到金菊在笑，你会闻到硕果飘香，因为你到了收获的季节-大学赐予我一双想飞的翅膀我可以借着它的力量去实现自己理想。-我要在今后的生活里积蓄更多的能量，给自己加油，为自己喝彩，相信蝴蝶破茧而出的将会是人生全程-描写大学生活的文章：大学生活的感受-大学生活过去了一个学期了，在那逝去的半年时光里，初步认识到大学生活的作为。"><a href="#大学生活是人生不可磨灭的记忆，你的每一次尝试，每一声叹息，每一次牵手，都在大学四年的日子里沉淀为永恒。-大学是我们每一个人梦想的殿堂，为了来到这个殿堂我们经历了风风雨雨。-既然跨进了这道门槛，那么就让我们在这梦想的殿堂里尽情的挥洒个性吧。-大学不是幻想，不是梦想，更不是妄想，而是我们伟大的理想。-只要我们为之奋斗，为之拼搏。-总有一天我们会满载而归的-那时你会听到枫叶流舟，你会看到金菊在笑，你会闻到硕果飘香，因为你到了收获的季节-大学赐予我一双想飞的翅膀我可以借着它的力量去实现自己理想。-我要在今后的生活里积蓄更多的能量，给自己加油，为自己喝彩，相信蝴蝶破茧而出的将会是人生全程-描写大学生活的文章：大学生活的感受-大学生活过去了一个学期了，在那逝去的半年时光里，初步认识到大学生活的作为。" class="headerlink" title="大学生活是人生不可磨灭的记忆，你的每一次尝试，每一声叹息，每一次牵手，都在大学四年的日子里沉淀为永恒。 大学是我们每一个人梦想的殿堂，为了来到这个殿堂我们经历了风风雨雨。 既然跨进了这道门槛，那么就让我们在这梦想的殿堂里尽情的挥洒个性吧。 大学不是幻想，不是梦想，更不是妄想，而是我们伟大的理想。 只要我们为之奋斗，为之拼搏。 总有一天我们会满载而归的!那时你会听到枫叶流舟，你会看到金菊在笑，你会闻到硕果飘香，因为你到了收获的季节 大学赐予我一双想飞的翅膀我可以借着它的力量去实现自己理想。 我要在今后的生活里积蓄更多的能量，给自己加油，为自己喝彩，相信蝴蝶破茧而出的将会是人生全程 描写大学生活的文章：大学生活的感受 大学生活过去了一个学期了，在那逝去的半年时光里，初步认识到大学生活的作为。"></a>大学生活是人生不可磨灭的记忆，你的每一次尝试，每一声叹息，每一次牵手，都在大学四年的日子里沉淀为永恒。 大学是我们每一个人梦想的殿堂，为了来到这个殿堂我们经历了风风雨雨。 既然跨进了这道门槛，那么就让我们在这梦想的殿堂里尽情的挥洒个性吧。 大学不是幻想，不是梦想，更不是妄想，而是我们伟大的理想。 只要我们为之奋斗，为之拼搏。 总有一天我们会满载而归的!那时你会听到枫叶流舟，你会看到金菊在笑，你会闻到硕果飘香，因为你到了收获的季节 大学赐予我一双想飞的翅膀我可以借着它的力量去实现自己理想。 我要在今后的生活里积蓄更多的能量，给自己加油，为自己喝彩，相信蝴蝶破茧而出的将会是人生全程 描写大学生活的文章：大学生活的感受 大学生活过去了一个学期了，在那逝去的半年时光里，初步认识到大学生活的作为。</h6>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    <category term="读书笔记" scheme="https://love.pipi1002.fun/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>HTML</title>
    <link href="https://love.pipi1002.fun/2022/11/16/HTML/"/>
    <id>https://love.pipi1002.fun/2022/11/16/HTML/</id>
    <published>2022-11-16T13:26:33.000Z</published>
    <updated>2023-01-02T04:31:40.116Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-vscode前端需要安装的插件"><a href="#1-vscode前端需要安装的插件" class="headerlink" title="1.vscode前端需要安装的插件"></a>1.vscode前端需要安装的插件</h1><ul><li><p>Auto Rename Tag 自动将结尾标签进行更改</p></li><li><p>HTML CSS Support 在html代码中支持css提示</p></li><li><p>HTML Snippets 自动生成html代码，专门针对html代码格式</p></li><li><p>image preview 在代码前预览图片的缩略图</p></li><li><p>IntelliSense for CSS class names in HTML 在html中提出css中的class名</p></li><li><p>Live Sever 将vscode作为一台服务器，让浏览器进行访问，实时更新数据</p></li><li><p>open in browser 可以将网页在不同浏览器打开，需要更新页面数据时需要刷新页面</p></li></ul><h2 id="文本标签"><a href="#文本标签" class="headerlink" title="文本标签"></a>文本标签</h2><ul><li><p>用来组织网页中的文本，不同的文本可以使用不同的文本标签</p><h5 id="标题标签h"><a href="#标题标签h" class="headerlink" title="标题标签h"></a>标题标签h</h5><p>h1~h6用来组织标题文本，数字越大字号越小，文本变粗，独占一行默认标签上下有间距margin</p><ul><li><p>语法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>h1标签<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>h2标签<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>h3标签<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>h4标签<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>h5标签<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>h6标签<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h5 id="段落标签p"><a href="#段落标签p" class="headerlink" title="段落标签p"></a>段落标签p</h5><ul><li><p>用来组织段落文本，一个段落就是一个p标签</p></li><li><p>语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">文本</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>p标签不能嵌套</li><li>默认上下有间距margin</li><li>独占一行</li></ul></li></ul><h5 id="span标签，用来组织简短文本，或提示性信息"><a href="#span标签，用来组织简短文本，或提示性信息" class="headerlink" title="span标签，用来组织简短文本，或提示性信息"></a>span标签，用来组织简短文本，或提示性信息</h5><ul><li><h5 id="语法："><a href="#语法：" class="headerlink" title="语法："></a>语法：</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>文本<span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>span可以同行显示</p><h5 id="label标签"><a href="#label标签" class="headerlink" title="label标签"></a>label标签</h5><ul><li><h5 id="提供了特殊用途，可以搭配表单元素一起使用，控制表单元素"><a href="#提供了特殊用途，可以搭配表单元素一起使用，控制表单元素" class="headerlink" title="提供了特殊用途，可以搭配表单元素一起使用，控制表单元素"></a>提供了特殊用途，可以搭配表单元素一起使用，控制表单元素</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>文本<span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：可以同行显示          </p></li></ul></li></ul><h5 id="b-strong标签"><a href="#b-strong标签" class="headerlink" title="b/strong标签"></a>b/strong标签</h5><ul><li><p>用来进行文本加粗处理</p></li><li><p>语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>文本<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>文本<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br></pre></td></tr></table></figure><p>推荐使用strong</p></li></ul><h5 id="i-em标签"><a href="#i-em标签" class="headerlink" title="i/em标签"></a>i/em标签</h5><ul><li><p>用来进行文本斜体处理</p></li><li><p>语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span>文本<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>文本<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>推荐使用i标签</li></ul></li></ul><h5 id="换行br标签"><a href="#换行br标签" class="headerlink" title="换行br标签"></a>换行br标签</h5><ul><li><p>用于换行，需要换几行就使用几个br标签</p></li><li><p>语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="分割线hr标签"><a href="#分割线hr标签" class="headerlink" title="分割线hr标签"></a>分割线hr标签</h5><ul><li><p>在页面上加一条直线</p></li><li><p>语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">&lt;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="图片标签"><a href="#图片标签" class="headerlink" title="图片标签"></a>图片标签</h1><ul><li><p>用来连接图片</p></li><li><p>语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;需要连接图片的路径&quot;</span> <span class="attr">title</span>=<span class="string">&quot;图片加载成功时显示的图片&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;图片加载失败时显示的解释说明文字&quot;</span> <span class="attr">width:</span>&quot;<span class="attr">设置图片的宽度</span>&quot; <span class="attr">heigth:</span>&quot;<span class="attr">设置图片的高度</span>&quot;&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>绝对路径：是指目标文件在目录的具体位置</p><p>在开发中指https或者http开头的路径，或者磁盘盘符路径</p></li><li><p>相对路径：是以某个文件为参考找到目标文件的路径</p><p>在开发中，是以当前文件出发，找到目标文件的路径</p></li><li><p>注意：返回上一级 ../</p></li><li><p>宽度和高度只设置一个时等比例缩放，如果都设置图片可能被拉伸，可能会变形</p></li></ul></li></ul><h2 id="超链接标签"><a href="#超链接标签" class="headerlink" title="超链接标签"></a>超链接标签</h2><ul><li><p>用于网页跳转</p></li><li><p>语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;链接需要跳转到的网页路径&quot;</span> <span class="attr">target</span>=<span class="string">&quot;设置新网页的打开方式&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>href：可以是本地路径，也可以是网络路径（必须包含http或https）———推荐使用相对路径</li><li>target：控制新打开的网页的打开方式,_self 在原窗口打开网页,_blank 新开窗口打开网页</li></ul></li><li><p>注意：</p><ul><li><p>href=””或者href=”#”:代表刷新页面</p></li><li><p>锚点：以#id名可以指定跳转到指定位置 href=”#id名”</p></li><li><p>id是唯一的，一个网页中不能出现同名的id</p><p>id命名规则：</p><p>​      是以数字，字母，下划线_，和短横线-构成</p><p>​      不能以数字开头，不能包含特殊符号</p><h2 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h2><ul><li><p>语法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">table：代表了一个表格，默认没有边框</span><br><span class="line">        tr:代表的就是行，需要几行就是几个tr,可以设置高度height，会影响整行高度，不能设置宽度width</span><br><span class="line">           align在tr上设置，设置的是该单元格中内容的对齐方式</span><br><span class="line">           bgcolor：设置该行背景颜色</span><br><span class="line">        td：代表的就是列，需要几列就是几个td，可以设置宽度width，会影响整列宽度，不能设置高度height</span><br><span class="line">           align在td上设置，设置的是该单元格中内容的对其方式</span><br><span class="line">           bgcolor：设置该列背景颜色</span><br><span class="line">        border：设置表格的边框</span><br><span class="line">        width：设置表格的宽度</span><br><span class="line">        height：设置表格的高度</span><br><span class="line">        align：设置表格在页面中的对应方式 left左对齐，right右对齐，center居中对齐</span><br><span class="line">        bgcolor：设置的是背景颜色  颜色单词，#十六进制的值</span><br><span class="line">        cellspacing：设置单元格间的间距</span><br><span class="line">        cellpadding： 设置单元格边框到内容的距离</span><br></pre></td></tr></table></figure><ul><li><p>[ ] border:设置表格边框</p></li><li><p>[ ] align：设置对齐方式  </p></li><li><p>left</p></li><li><p>right</p></li><li><p>center</p></li><li><p>注意：table标签设置align控制表格在页面中的对齐方式，tr和td设置align控制的是</p><p>​           单元格的内容在单元格的对齐方式</p><ul><li><p>bgcolor：背景颜色    优先级：  td&gt;tr&gt;table</p></li><li><p>cellspacing:  设置单元格间的间距  </p></li><li><p>cellpadding:  设置单元格边框到内容的距离                          </p></li></ul></li></ul></li></ul></li></ul></li></ul><ul><li><p>注意：</p><p>1.th标签代表表头，默认会进行加粗，文本居中显示</p><p>2.表格的基本结构，table里面只能放tr，tr里面只能放th或td</p><p>3.表格是可以相互嵌套的，注意里面的表格需要放在外面表格的单元格之中，不能破坏外面表格结构</p><h5 id="单元格合并："><a href="#单元格合并：" class="headerlink" title="单元格合并："></a>单元格合并：</h5><ul><li>rowspan：跨行合并，垂直方向上进行合并</li><li>colspan：  水平合并，水平方向上进行合并</li></ul></li></ul><h2 id="表单标签"><a href="#表单标签" class="headerlink" title="表单标签"></a>表单标签</h2><ul><li>登录注册等需要进行数据交互的标签</li></ul><h4 id="普通输入框"><a href="#普通输入框" class="headerlink" title="普通输入框"></a>普通输入框</h4><ul><li><h5 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;文本框中显示的提示信息&quot;</span> <span class="attr">value</span>=<span class="string">&quot;设置文本框中默认值&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="密码框"><a href="#密码框" class="headerlink" title="密码框"></a>密码框</h4><ul><li><h5 id="语法：-1"><a href="#语法：-1" class="headerlink" title="语法："></a>语法：</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;passworld&quot;</span>&gt;</span> </span><br></pre></td></tr></table></figure><ul><li>输入的内容是不可见的</li></ul></li></ul><h4 id="单选框"><a href="#单选框" class="headerlink" title="单选框"></a>单选框</h4><ul><li><h5 id="语法：-2"><a href="#语法：-2" class="headerlink" title="语法："></a>语法：</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">id</span>=<span class="string">&quot;nan&quot;</span>&gt;</span>男 <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;nan&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">id</span>=<span class="string">&quot;nv&quot;</span>&gt;</span>女 <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;nv&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>注意：</li><li>单选框需要设置相同的name值进行绑定</li><li>label的特殊用法：通过form属性指定对应的表单元素的id，就可以通过点击label中的内容控制对应的表单元素获取焦点</li></ul></li></ul><h4 id="复选框"><a href="#复选框" class="headerlink" title="复选框"></a>复选框</h4><ul><li><h5 id="语法：-3"><a href="#语法：-3" class="headerlink" title="语法："></a>语法：</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span>LOL</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span>王者</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span>开心消消乐</span><br></pre></td></tr></table></figure><p>注意：checke可以控制单选框或者多选框默认选中</p></li></ul><h4 id="下拉列表"><a href="#下拉列表" class="headerlink" title="下拉列表"></a>下拉列表</h4><ul><li><h5 id="语法：-4"><a href="#语法：-4" class="headerlink" title="语法："></a>语法：</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span> <span class="attr">multiple</span>&gt;</span>身份证<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>驾驶证<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span> <span class="attr">selected</span>&gt;</span>学生证<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：下拉列表默认显示第一个选项，可以在option上设置select属性，控制默认显示的选项</p><p>默认下拉列表只能选中一个选项，可以在select标签上设置multiple属性控制多选</p></li></ul><h4 id="文本域"><a href="#文本域" class="headerlink" title="文本域"></a>文本域</h4><ul><li><h5 id="语法：-5"><a href="#语法：-5" class="headerlink" title="语法："></a>语法：</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;30&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>cols:一行可以输入多少个字符   </li><li>rows：文本域可以显示几行可以变相控制文本域的宽高</li></ul></li></ul><h4 id="按钮"><a href="#按钮" class="headerlink" title="按钮"></a>按钮</h4><ul><li><h4 id="语法：-6"><a href="#语法：-6" class="headerlink" title="语法："></a>语法：</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;普通按钮&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;重置按钮&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交按钮&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span>&gt;</span>普通按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span>&gt;</span>重置按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>提交按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>推荐使用button按钮</li><li>注意：重置和提交按钮需要配合form标签一起使用</li></ul></li></ul><h4 id="form标签"><a href="#form标签" class="headerlink" title="form标签"></a>form标签</h4><ul><li><p>语法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;success.html&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>action：设置提交数据的服务器地址</li><li>method：设置提交数据提交方式<ul><li>get：从服务器获取数据，也可以提交数据，但是数据会显示在窗口的地址栏</li><li>post：提交数据给服务器，数据不会显示在窗口的地址栏</li></ul></li></ul></li></ul><h2 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h2><ul><li><h5 id="无序列表ul"><a href="#无序列表ul" class="headerlink" title="无序列表ul"></a>无序列表ul</h5><ul><li><p>语法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>选项1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>选项2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>选项3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：默认有16像素的margin  padding-left有40px</p><p>​          ul里面只能放li标签</p><p>​          ul，li标签都是独占一行</p></li></ul></li><li><h5 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h5><ul><li><p>语法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>选项1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>选项2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>选项3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：有序列表ol 默认上下也有16px上下margin 有40px的padding-left</p><p>​           ol里只能发li标签 </p><p>​          ol，li标签都是独占一行</p><p>有序列表和无序列表可以嵌套</p></li></ul></li></ul><ul><li><h5 id="定义列表"><a href="#定义列表" class="headerlink" title="定义列表"></a>定义列表</h5><ul><li><p>语法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dt</span>&gt;</span>中国<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>中华人民共和国<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dt</span>&gt;</span>汽水<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>碳水化合物，冒着泡泡的肥宅水<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：dl：定义列表 </p><p>​            dt：指定一个名词 dd：针对名词进行解释说明 </p></li></ul></li></ul><h2 id="其他标签："><a href="#其他标签：" class="headerlink" title="其他标签："></a>其他标签：</h2><h5 id="div标签："><a href="#div标签：" class="headerlink" title="div标签："></a>div标签：</h5><ul><li><h5 id="可以看作一个容器结构，并且没有任何样式，独占一行，可以通过CSS自己设置"><a href="#可以看作一个容器结构，并且没有任何样式，独占一行，可以通过CSS自己设置" class="headerlink" title="可以看作一个容器结构，并且没有任何样式，独占一行，可以通过CSS自己设置"></a>可以看作一个容器结构，并且没有任何样式，独占一行，可以通过CSS自己设置</h5></li><li><h5 id="marquee标签：跑马灯，里面的内容从右边进入，从左边滚动到左侧消失，，循环播放"><a href="#marquee标签：跑马灯，里面的内容从右边进入，从左边滚动到左侧消失，，循环播放" class="headerlink" title="marquee标签：跑马灯，里面的内容从右边进入，从左边滚动到左侧消失，，循环播放"></a>marquee标签：跑马灯，里面的内容从右边进入，从左边滚动到左侧消失，，循环播放</h5></li><li><p>语法：</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">marquee</span> <span class="attr">behavior</span>=<span class="string">&quot;&quot;</span> <span class="attr">direction</span>=<span class="string">&quot;&quot;</span>&gt;</span>公告：明天周五不上晚自习<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="iframe-框架标签"><a href="#iframe-框架标签" class="headerlink" title="iframe 框架标签"></a>iframe 框架标签</h5><ul><li><p>可以在网页中嵌套其他的网页，可以是在线服务器的网页，也可以是本地服务器的网页</p></li><li><p>语法：src内是需要嵌套的其他网页，可以是在线服务器的网页，也可以是本地服务器的网页</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;http://www.woniuxy.com&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> <span class="attr">width</span>=<span class="string">&quot;1000px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;500px&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><h5 id="注意：需要设置宽高，如果宽高不够，自动产生滚动条，不赞成使用"><a href="#注意：需要设置宽高，如果宽高不够，自动产生滚动条，不赞成使用" class="headerlink" title="注意：需要设置宽高，如果宽高不够，自动产生滚动条，不赞成使用"></a>注意：需要设置宽高，如果宽高不够，自动产生滚动条，不赞成使用</h5></li></ul><h5 id="删除线标签-del"><a href="#删除线标签-del" class="headerlink" title="删除线标签 del"></a>删除线标签 del</h5><ul><li><p>语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">del</span>&gt;</span>$998<span class="tag">&lt;/<span class="name">del</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="带边框的标签-fieldset"><a href="#带边框的标签-fieldset" class="headerlink" title="带边框的标签  fieldset"></a>带边框的标签  fieldset</h5><ul><li><p>语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 设置边框上的标题 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">legend</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">            用户名： <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">            密码： <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-vscode前端需要安装的插件&quot;&gt;&lt;a href=&quot;#1-vscode前端需要安装的插件&quot; class=&quot;headerlink&quot; title=&quot;1.vscode前端需要安装的插件&quot;&gt;&lt;/a&gt;1.vscode前端需要安装的插件&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A</summary>
      
    
    
    
    <category term="Html前端笔记" scheme="https://love.pipi1002.fun/categories/Html%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>页面homework</title>
    <link href="https://love.pipi1002.fun/2022/11/16/%E9%A1%B5%E9%9D%A2homework/"/>
    <id>https://love.pipi1002.fun/2022/11/16/%E9%A1%B5%E9%9D%A2homework/</id>
    <published>2022-11-16T13:26:19.000Z</published>
    <updated>2023-01-02T04:32:01.265Z</updated>
    
    <content type="html"><![CDATA[<h1 id="雪碧图应用"><a href="#雪碧图应用" class="headerlink" title="雪碧图应用"></a>雪碧图应用</h1><ul><li><p>将多张图片组合在一起，形成一张图片，减少请求服务器的次数，优化网页</p></li><li><p>原理：通过背景样式background-image和background-position来实现雪碧图效果</p></li><li><p>步骤：</p><p> 1.设置一个宽高刚好显示指定图标大小的标签（盒子）</p><p> 2.通过background-image引入雪碧图</p><p> 3.再通过background-position来实现雪碧图的显示位置，调整到指定图标</p></li><li><p>注意：在开发过程中，x轴的正方向是水平向右，y轴的正方向是垂直向下</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;雪碧图应用&quot;&gt;&lt;a href=&quot;#雪碧图应用&quot; class=&quot;headerlink&quot; title=&quot;雪碧图应用&quot;&gt;&lt;/a&gt;雪碧图应用&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;将多张图片组合在一起，形成一张图片，减少请求服务器的次数，优化网页&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;</summary>
      
    
    
    
    <category term="Html前端笔记" scheme="https://love.pipi1002.fun/categories/Html%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>CSS样式</title>
    <link href="https://love.pipi1002.fun/2022/11/16/CSS%E6%A0%B7%E5%BC%8F/"/>
    <id>https://love.pipi1002.fun/2022/11/16/CSS%E6%A0%B7%E5%BC%8F/</id>
    <published>2022-11-16T13:25:29.000Z</published>
    <updated>2023-01-02T04:33:19.717Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网页由三部分组成："><a href="#网页由三部分组成：" class="headerlink" title="网页由三部分组成："></a>网页由三部分组成：</h1><p>1.html ：网页架构骨架，网页结构的设计</p><p>2.CSS：网页的样式，用于美化网页，有了CSS才能达到像素级的还原</p><p>3.JavaScript：动态脚本，控制页面动画，点击事件</p><h2 id="CSS基本概念："><a href="#CSS基本概念：" class="headerlink" title="CSS基本概念："></a>CSS基本概念：</h2><p>css （Cascading Style Sheets）层叠样式表，主要控制网页样式显示。一般css样式是作用在标签上，控制的是标签显示的样式。</p><p>层叠： css样式可以在多个地方书写，可以在标签上添加style属性添加css样式代码，style标签中书写的，外部css文件中书写css代码，最终层叠在一起，形成一套css样式作用在标签上。相同的css属性只作用一个，不同的直接作用。</p><p>样式表：css的样式代码；页面上通过内联样式，内部样式，外部样式的方式属性css代码</p><h2 id="网页中样式的来源"><a href="#网页中样式的来源" class="headerlink" title="网页中样式的来源"></a>网页中样式的来源</h2><p>注意：所有html默认没有样式</p><ul><li><h4 id="浏览器默认的样式不同"><a href="#浏览器默认的样式不同" class="headerlink" title="浏览器默认的样式不同"></a>浏览器默认的样式不同</h4></li><li><p>所有的html标签默认没有样式，但是a，h标签等默认是浏览器添加的样式  </p></li><li><h4 id="浏览器用户自定义的样式"><a href="#浏览器用户自定义的样式" class="headerlink" title="浏览器用户自定义的样式"></a>浏览器用户自定义的样式</h4></li><li><p>用户可以在浏览器上更改默认标签的样式</p></li></ul><h3 id="内联样式"><a href="#内联样式" class="headerlink" title="内联样式"></a>内联样式</h3><p>在标签上添加style属性，在属性值中书写css样式代码</p><ul><li>语法：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;css属性1:css属性1的值;css属性2:css属性2的值&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>好处：哪里需要样式写在哪</p></li><li><p>缺点：多个标签有相同的样式时需重复添加</p></li></ul><h3 id="内部样式"><a href="#内部样式" class="headerlink" title="内部样式"></a>内部样式</h3><ul><li><p>在head标签添加style标签，再通过选择器书写css样式代码</p></li><li><p>语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        选择器&#123;</span></span><br><span class="line"><span class="language-css">            css属性<span class="number">1</span>:css属性值<span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">            css属性<span class="number">2</span>:css属性值<span class="number">2</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>好处：</p><ul><li>​    结构和样式分清了，利与后期代码维护</li><li>​    可以批量选择标签中的标签样式</li></ul></li><li><p>缺点：</p><ul><li>样式和结构完全分离，目前还在一个文件中          </li></ul></li></ul><h3 id="外部样式"><a href="#外部样式" class="headerlink" title="外部样式"></a>外部样式</h3><ul><li><p>先创建一个后缀名为.css文件，再在里面通过选择器书写css样式代码，再在head标签中通过link标签引入css样式文件</p></li><li><p>语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/01-外部样式.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>里面的href:链接css文件</p><ul><li><p>好处：</p><ul><li>样式和结构代码完全分离</li><li>以后维护代码可以一处改处处改</li><li>以后可以将css进行压缩，减少文件体积</li></ul></li><li><h4 id="注意：优先级：相同的选择器，内联-gt-内部-外部-，内部和外部的优先级是依据代码的先后（就近原则）"><a href="#注意：优先级：相同的选择器，内联-gt-内部-外部-，内部和外部的优先级是依据代码的先后（就近原则）" class="headerlink" title="注意：优先级：相同的选择器，内联&gt;内部/外部 ，内部和外部的优先级是依据代码的先后（就近原则）"></a>注意：优先级：相同的选择器，内联&gt;内部/外部 ，内部和外部的优先级是依据代码的先后（就近原则）</h4></li></ul><h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h2><h5 id="相同选择器后面选择器会盖住前面选择器"><a href="#相同选择器后面选择器会盖住前面选择器" class="headerlink" title="相同选择器后面选择器会盖住前面选择器"></a>相同选择器后面选择器会盖住前面选择器</h5><p>  1.标签选择器：</p><ul><li><p>通过标签名找到指定的标签，没有指定范围的时候找到的是页面中所以满足条件的标签</p><p>2.类选择器（class选择器）：</p></li><li><p>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">标签名&#123;</span><br><span class="line">css属性1：css属性值1；</span><br><span class="line">css属性2：css属性值2；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>又称为class标签，通过标签上class名找到满足条件的标签，多个标签可以共享一个class标签，可以提供公共标签样式</p></li><li><p>语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">class名&#123;</span><br><span class="line">css属性1：css属性值1；</span><br><span class="line">css属性2：css属性值2；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>  注意：</p><ul><li><p>标签上可以作用多个class名，中间用空格隔开</p></li><li><p>如果选择器多个组合在一起，中间没有空格，代表并且的意思</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">找到页面中class名中即有op又有oa的标签</span><br><span class="line">.op.oa&#123;</span><br><span class="line">css样式代码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>  3.标签选择器</p><ul><li><p>id是标签上定义的属性，id唯一，找到页面中唯一的标签，精准定位</p></li><li><p>通过标签上id名找到满足条件的标签</p></li><li><p>id命名规则：</p><ul><li><p>以数字，字母，-和_构成</p></li><li><p>不能以数字开头</p></li><li><p>不能包含特殊符号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#id名&#123;</span><br><span class="line">css样式代码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：id是唯一的，以后通过js会操作标签上id名，id选择器慎用</p><p>优先级问题：</p><ul><li>相同选择器，内联样式权重最大，内部样式和外部样式采用就近原则</li><li>相同选择器同时作用在一个标签上，后面的样式会盖住前面的样式</li><li>选择器权重（优先级）：id选择器&gt;类选择器&gt;标签选择器</li></ul></li></ul></li></ul><h2 id="背景样式"><a href="#背景样式" class="headerlink" title="背景样式"></a>背景样式</h2><ul><li><p><code>background-color</code>：设置背景颜色</p><ul><li>单词（#开头的十六进制数字）</li><li>rgb（0~255，0~255，0~255）</li></ul></li><li><p><code>background-image</code>:设置背景图片</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CSS</span><br><span class="line">background-image:url(链接背景图片的文件路径)</span><br></pre></td></tr></table></figure><ul><li>背景图片默认从盒子左上角开始铺设，如果铺不满默认平铺</li><li>注意：如果背景颜色和图片同时存在，图片盖住背景颜色</li></ul></li><li><p><code>background-repeat</code>:设置背景图片是否平铺</p><ul><li><code>repeat</code>：默认值，x轴，y轴都平铺</li><li><code>repeat-x</code>:x轴方向进行平铺</li><li><code>repeat-y</code>:y轴方向进行平铺</li><li><code>no-repeat</code>:不平铺</li><li>可以实现一个像素渐变背景平铺，减少图片的体积，从而优化网页</li></ul></li><li><p><code>background-position</code>:设置背景图片的显示位置</p><ul><li>x轴 y轴：<ul><li>单词：left right center top bottom 两两搭配使用</li><li>固定的像素值：默认左上角0px，0px</li><li>百分比：50%，50%相当于center center</li></ul></li></ul></li><li><p><code>background-size</code>:设置背景图片的大小，css3提出</p><ul><li><p><code>contain</code>：一边铺满，另一边铺满</p></li><li><p><code>cover</code>:两边都铺满，超出部分隐藏</p></li><li><pre><code>x轴，y轴<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    :宽度，高度</span><br><span class="line"></span><br><span class="line">    - 同时设置两个值，背景图片样式可能变形，只设置一个值，代表图片的宽度</span><br><span class="line"></span><br><span class="line">- `background-attachment`:设置背景图片是否固定 css3提供</span><br><span class="line"></span><br><span class="line">  - score:默认值，图片会随着滚动条滚动</span><br><span class="line">  - fixed：背景图片固定在页面上</span><br><span class="line"></span><br><span class="line">- `background`:复合属性</span><br><span class="line"></span><br></pre></td></tr></table></figure>CSSbackground:pink url(img/img-3.jpg) no-repeat 50% 50% /100px 100px fixed;</code></pre></li><li><p>/前面代表图片显示位置，/后面代表背景图片大小</p></li></ul></li></ul><h2 id="文本样式"><a href="#文本样式" class="headerlink" title="文本样式"></a>文本样式</h2><ul><li><code>color</code>:设置文本的颜色</li><li><code>text-align</code>:设置文本的对齐方式<ul><li>left：左对齐</li><li>right：右对齐</li><li>center：中间居中</li></ul></li></ul><p>​                注意：可以控制标签中文本在水平方向的对齐方式，对行级标签同样有效</p><ul><li><code>line-height</code>:设置文本行高</li></ul><p>​        1.像素</p><p>​        2.百分比和数字是参考字体的大小，相当于字体的倍数</p><p>​         注意：一行里面的文本在垂直方向上居中</p><pre><code>                 针对单行文本水平垂直居中，可以设置text-align，line-height等于盒子宽度</code></pre><ul><li><p><code>text-decoration</code>:</p><ul><li>none:无</li><li>underline：下划线</li><li>line-thorugh：中划线</li><li>overline：上划线</li></ul></li><li><p>letter-spacing:设置字符间距，一个中文就是一个字符，一个字母是一个字符 </p></li><li>word-spacing:设置字间距，以空格为参考</li><li>text-indent:设置首行缩进</li><li>text-transform:设置英文字母大小写 capitalize：首字母大写 uppercase：全部大写 lowercase：全部小写</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;网页由三部分组成：&quot;&gt;&lt;a href=&quot;#网页由三部分组成：&quot; class=&quot;headerlink&quot; title=&quot;网页由三部分组成：&quot;&gt;&lt;/a&gt;网页由三部分组成：&lt;/h1&gt;&lt;p&gt;1.html ：网页架构骨架，网页结构的设计&lt;/p&gt;
&lt;p&gt;2.CSS：网页的样式，</summary>
      
    
    
    
    <category term="Html前端笔记" scheme="https://love.pipi1002.fun/categories/Html%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>C-CProject</title>
    <link href="https://love.pipi1002.fun/2022/11/16/C-C/"/>
    <id>https://love.pipi1002.fun/2022/11/16/C-C/</id>
    <published>2022-11-16T13:25:12.000Z</published>
    <updated>2023-01-05T05:10:04.989Z</updated>
    
    <content type="html"><![CDATA[<h1 id="猜数字游戏"><a href="#猜数字游戏" class="headerlink" title="猜数字游戏"></a>猜数字游戏</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">menu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;##########################\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;###     1.play   0.exit      ###\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;##########################\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//RAND_MAX-32767</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">game</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//1.生成一个随机数</span></span><br><span class="line">    <span class="type">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> guess = <span class="number">0</span>;<span class="comment">//接收猜的数字</span></span><br><span class="line">    <span class="comment">//拿时间戳来设置随机数的生成起始点</span></span><br><span class="line">    <span class="comment">//time_t time(time_t *timer)</span></span><br><span class="line">    <span class="comment">//time_t</span></span><br><span class="line">    ret = <span class="built_in">rand</span>() % <span class="number">100</span> + <span class="number">1</span>;<span class="comment">//生成随机数1到100之间的随机数（一个数被%，只会等于一个1到99的数）</span></span><br><span class="line">    <span class="comment">//printf(&quot;%d\n&quot;,ret);</span></span><br><span class="line">    <span class="comment">//2.猜数字</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请猜数字：&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;guess);</span><br><span class="line">        <span class="keyword">if</span> (guess &gt; ret)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;猜大了\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (guess &lt; ret)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;猜小了\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;恭喜你！！！猜中了\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> input = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">srand</span>((<span class="type">unsigned</span> <span class="type">int</span>)<span class="built_in">time</span>(<span class="literal">NULL</span>));<span class="comment">//在工程里只需要调用一次</span></span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="built_in">menu</span>();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请选择:&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;input);</span><br><span class="line">        <span class="keyword">switch</span> (input)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">game</span>();<span class="comment">//猜数字游戏</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;退出游戏\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;选择错误\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (input);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;猜数字游戏&quot;&gt;&lt;a href=&quot;#猜数字游戏&quot; class=&quot;headerlink&quot; title=&quot;猜数字游戏&quot;&gt;&lt;/a&gt;猜数字游戏&lt;/h1&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="C语言基础笔记" scheme="https://love.pipi1002.fun/categories/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>C-Ctext</title>
    <link href="https://love.pipi1002.fun/2022/11/16/C-Ctext/"/>
    <id>https://love.pipi1002.fun/2022/11/16/C-Ctext/</id>
    <published>2022-11-16T13:25:12.000Z</published>
    <updated>2023-02-19T04:22:51.845Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C-C-的学习TEXT"><a href="#C-C-的学习TEXT" class="headerlink" title="C/C++的学习TEXT"></a>C/C++的学习TEXT</h1><h2 id="避免累积乘的问题（for循环嵌套）"><a href="#避免累积乘的问题（for循环嵌套）" class="headerlink" title="避免累积乘的问题（for循环嵌套）"></a>避免累积乘的问题（for循环嵌套）</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//1的阶乘，加2的阶乘，加3的阶乘</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n, ret, i, sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (n = <span class="number">1</span>; n &lt;= <span class="number">3</span>; n++)</span><br><span class="line">&#123;</span><br><span class="line">ret = <span class="number">1</span>;<span class="comment">//为了避免累积乘的现象出现，这一步必须要有</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">ret = ret * i;</span><br><span class="line">&#125;</span><br><span class="line">sum = sum + ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, sum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="辗转相除法"><a href="#辗转相除法" class="headerlink" title="辗转相除法"></a>辗转相除法</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//辗转相除法求两个数的最大公约数，和最小公倍数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> a, b, m, n, r;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Enter m,n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;m,&amp;n);</span><br><span class="line">a = m;</span><br><span class="line">b = n;</span><br><span class="line"><span class="keyword">while</span> (m % n)<span class="comment">//如果m%n=0，自动跳出循环</span></span><br><span class="line">&#123;</span><br><span class="line">r = m % n;</span><br><span class="line">m = n;</span><br><span class="line">n = r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;最大公约数=%d\n&quot;</span>, n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;最小公倍数=%d\n&quot;</span>, a * b / n);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="闰年计算方法"><a href="#闰年计算方法" class="headerlink" title="闰年计算方法"></a>闰年计算方法</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">main</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> year = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (year = <span class="number">1000</span>; year &lt;= <span class="number">2000</span>; year++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span>)</span><br><span class="line">            <span class="comment">//if((year%4==0)&amp;&amp;(year%100!=0))||(year%400==0))</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, year);</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (year % <span class="number">400</span> == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, year);</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\ncount=%d\n&quot;</span>, count);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="素数：（规则）试除法-1不是素数"><a href="#素数：（规则）试除法-1不是素数" class="headerlink" title="素数：（规则）试除法,1不是素数"></a>素数：（规则）试除法,1不是素数</h2><p>素数只能被1和它本身整除</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//打印100到200间的素数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="comment">//判断i是否为素数</span></span><br><span class="line"><span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">100</span>; i &lt;= <span class="number">200</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">2</span>; j &lt; i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i % j == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//此时有两种情况都可以跳出循环，要把它们分离开来</span></span><br><span class="line"><span class="keyword">if</span> (j == i)</span><br><span class="line">&#123;</span><br><span class="line">count++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, i);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\ncount= %d\n&quot;</span>, count);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//从键盘输入一个大于2的整数m，判断m是不是素数（）</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="built_in">main</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> k,m,i;</span><br><span class="line">    <span class="function"><span class="keyword">do</span></span></span><br><span class="line"><span class="function">        <span class="title">scanf</span><span class="params">(<span class="string">&quot;%d&quot;</span>,&amp;m)</span></span>;</span><br><span class="line">    <span class="keyword">while</span>(m&lt;=<span class="number">2</span>);</span><br><span class="line">    k=(<span class="type">int</span>)<span class="built_in">sqrt</span>(m);<span class="comment">//从算法上考虑，为了减少重复量，开平方后面的数就不用相除了</span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;=k;i++)</span><br><span class="line">        <span class="keyword">if</span>(m%i==<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">if</span>(i&lt;=k)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d is not a prime number\n&quot;</span>,m);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d is a prime number\n&quot;</span>,m);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="打印1到100内包含九的数字："><a href="#打印1到100内包含九的数字：" class="headerlink" title="打印1到100内包含九的数字："></a>打印1到100内包含九的数字：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> count=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++)&#123;   <span class="comment">//如果十位数有9，那么这个数除10就会等于9，如果个位数有9，那么这个数取余%10就会等于9</span></span><br><span class="line">        <span class="keyword">if</span>(i%<span class="number">10</span>==<span class="number">9</span>)</span><br><span class="line">            count ++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(i/<span class="number">10</span>==<span class="number">9</span>)</span><br><span class="line">            count ++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;count=%d\n&quot;</span>,count);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="打印1-1-2-1-3-1-4-…-99-1-100-1的值"><a href="#打印1-1-2-1-3-1-4-…-99-1-100-1的值" class="headerlink" title="打印1+1/2-1/3+1/4+…+99/1-100/1的值"></a>打印1+1/2-1/3+1/4+…+99/1-100/1的值</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="type">double</span> sum=<span class="number">0.0</span>;</span><br><span class="line">    <span class="type">int</span> flag=<span class="number">1</span>;<span class="comment">//flage相当于正负号</span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++)&#123;</span><br><span class="line">        sum+=flag*<span class="number">1.0</span>/i;</span><br><span class="line">        flag=-flag;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lf\n&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="打印九九乘法口诀表（典型循环嵌套）"><a href="#打印九九乘法口诀表（典型循环嵌套）" class="headerlink" title="打印九九乘法口诀表（典型循环嵌套）"></a>打印九九乘法口诀表（典型循环嵌套）</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    <span class="comment">//确定打印九行</span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++)</span><br><span class="line">    &#123;<span class="comment">//打印一行</span></span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;i;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d*%d=%-3d&quot;</span>,i,j,i*j);<span class="comment">//-3d不够三位左空格补齐</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> k=<span class="number">7</span>;<span class="comment">//k为要找的数</span></span><br><span class="line">    <span class="type">int</span> arr[]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;</span><br><span class="line">    <span class="type">int</span> sz=<span class="built_in">sizeof</span>(arr)/<span class="built_in">sizeof</span> (arr[<span class="number">0</span>]);<span class="comment">//计算元素个数</span></span><br><span class="line">    <span class="type">int</span> left=<span class="number">0</span>;      <span class="comment">//左下标</span></span><br><span class="line">    <span class="type">int</span> right=sz<span class="number">-1</span>   <span class="comment">//右下标</span></span><br><span class="line">    <span class="type">int</span> mid=(left+right)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">while</span>(left&lt;right)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span>(arr[mid]&gt;k)<span class="comment">//要找的元素在中间元素左边，左下标不变，右下标变为mid-1</span></span><br><span class="line">      &#123;</span><br><span class="line">        right=mid<span class="number">-1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(arr[mid]&lt;k)<span class="comment">//要找的元素在中间元素右边，右下标不变，左下标变成mid+1</span></span><br><span class="line">      &#123;</span><br><span class="line">        left=mid+<span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">       <span class="keyword">else</span>(arr[mid]==k)</span><br><span class="line">           <span class="built_in">printf</span>(<span class="string">&quot;找到了，下标为：%d&quot;</span>,mid);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(left&gt;right)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;找不到&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//设计一个函数，实现二分查找</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">binary_search</span><span class="params">(<span class="type">int</span> arr[],<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//二分查找：在一个有序数组中查找具体某一个数，如果找到了就返回这个数的下标，找不到返回-1</span></span><br><span class="line">    <span class="type">int</span> arr[]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;;</span><br><span class="line">    <span class="type">int</span> k=<span class="number">7</span>;</span><br><span class="line">    <span class="type">int</span> ret=<span class="built_in">binary_search</span>(arr,k);</span><br><span class="line">    <span class="keyword">if</span>(ret==<span class="number">-1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;找不到指定的数字\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;找到了，下表是：%d\n&quot;</span>,ret);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="char-函数的使用"><a href="#char-函数的使用" class="headerlink" title="char()函数的使用"></a>char()函数的使用</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//从键盘上连续输入字符，并统计其中大写字母的个数直到“换行”字符结束</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="built_in">main</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ch=<span class="built_in">getchar</span>();</span><br><span class="line">        <span class="keyword">if</span>(ch==<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            <span class="keyword">break</span>;   <span class="comment">//只能终止他所在的循环体</span></span><br><span class="line">        <span class="keyword">if</span>(ch&gt;=<span class="string">&#x27;A&#x27;</span>&amp;&amp;ch&lt;=<span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">           sum++;</span><br><span class="line">    &#125;</span><br><span class="line">           <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,sum);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//输入一行字符，分别统计出其中的英文字母，空格，数字和其他字符的个数</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> c;</span><br><span class="line">    <span class="type">int</span> letter=<span class="number">0</span>,big=<span class="number">0</span>,space=<span class="number">0</span>,digit=<span class="number">0</span>,other=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入需要统计的字段:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span>((c=<span class="built_in">getchar</span>())!=<span class="string">&#x27;\n&#x27;</span>)<span class="comment">//到回车才结束循环</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(c&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">            letter++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(c&gt;<span class="string">&#x27;A&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">            big++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(c&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">            digit++;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            other++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;小写=%d\n大写=%d\n空格=%d\n数字=%d\n其它=%d&quot;</span>,letter,big,space,digit,other);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//有三行文字的文章，每行有80个字符，分别统计中英文大写字母，小写字母，数字，空格以及其他字符的个数（二维 ）</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="图案打印"><a href="#图案打印" class="headerlink" title="图案打印"></a>图案打印</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">//菱形从上到下a,b,c,d,e,f,g</span></span><br><span class="line">   <span class="function">a</span></span><br><span class="line"><span class="function">  bbb</span></span><br><span class="line"><span class="function"> ccccc</span></span><br><span class="line"><span class="function">ddddddd</span></span><br><span class="line"><span class="function"> eeeee</span></span><br><span class="line"><span class="function">  fff</span></span><br><span class="line"><span class="function">   g</span></span><br><span class="line"><span class="function"><span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       <span class="type">int</span> i,j;</span><br><span class="line">       <span class="type">char</span> c=<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">       <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=<span class="number">5</span>-i;j++)</span><br><span class="line">               <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">           <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=<span class="number">2</span>*i<span class="number">-1</span>;j++)</span><br><span class="line">               <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,c);</span><br><span class="line">           <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">           c=c+<span class="number">1</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=i;j++)</span><br><span class="line">               <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">           <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=<span class="number">9</span><span class="number">-2</span>*i;j++)</span><br><span class="line">               <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,c);</span><br><span class="line">           <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">           c=c+<span class="number">1</span>;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   </span><br></pre></td></tr></table></figure><h2 id="写一个函数，每次调用一次这个函数，就会将num的值加1"><a href="#写一个函数，每次调用一次这个函数，就会将num的值加1" class="headerlink" title="写一个函数，每次调用一次这个函数，就会将num的值加1"></a>写一个函数，每次调用一次这个函数，就会将num的值加1</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">C++</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Add</span><span class="params">(<span class="type">int</span>* p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//*p++;//++的优先级比较高，++是作用于p的，不是作用于*p的，所以这样写代码是错误的</span></span><br><span class="line">    (*p)++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> num=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">Add</span>(&amp;num);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,num);<span class="comment">//1</span></span><br><span class="line">    <span class="built_in">Add</span>(&amp;num);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,num);<span class="comment">//2</span></span><br><span class="line">    <span class="built_in">Add</span>(&amp;num);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,num);<span class="comment">//3</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编写一个程序，加密输出-字符数组应用举例"><a href="#编写一个程序，加密输出-字符数组应用举例" class="headerlink" title="编写一个程序，加密输出(字符数组应用举例)"></a>编写一个程序，加密输出(字符数组应用举例)</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加密规则：所有的大写英文字母加三，小写英文字母减三，其他字符不变。</span></span><br><span class="line"><span class="comment">//注意：特殊的X，Y，Z这三个大写英文字母直接加三不能使其正确加密，所以加密后让X为A，Y为B，Z为C；同理x,y,z使其为a,b,c.</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="built_in">main</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> ch,str1[<span class="number">81</span>],str2[<span class="number">81</span>];<span class="comment">//字符数组最大为81，防止溢出</span></span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Enter a string:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">get</span>(str1);<span class="comment">//get函数可以输入包括空格的字符</span></span><br><span class="line">    <span class="built_in">strcpy</span>(str2,str1);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;(ch=str2[i])!=<span class="string">&#x27;\n&#x27;</span>;i++)<span class="comment">//(ch=str2[i])!=&#x27;\0&#x27;代表一直执行直到遇到\0</span></span><br><span class="line">        <span class="keyword">if</span>(ch&gt;=<span class="string">&#x27;A&#x27;</span>&amp;&amp;ch&lt;=<span class="string">&#x27;W&#x27;</span>)</span><br><span class="line">            str2[i]+=<span class="number">3</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(ch==<span class="string">&#x27;X&#x27;</span>||ch==<span class="string">&#x27;Y&#x27;</span>||ch==<span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">            str2[i]-=<span class="number">23</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(ch&gt;=<span class="string">&#x27;d&#x27;</span>||ch&lt;=<span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">            str2[i]-=<span class="number">3</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(ch==<span class="string">&#x27;a&#x27;</span>||ch==<span class="string">&#x27;b&#x27;</span>||ch==<span class="string">&#x27;c&#x27;</span>)</span><br><span class="line">            str2[i]+=<span class="number">23</span>;</span><br><span class="line">    str2[i]=<span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;原串是:%s\n&quot;</span>,str1);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;加密后的串是:%s\n,str2&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="魔方阵（基数）-鞍点（flag的运用）"><a href="#魔方阵（基数）-鞍点（flag的运用）" class="headerlink" title="魔方阵（基数）/鞍点（flag的运用）"></a>魔方阵（基数）/鞍点（flag的运用）</h2><ul><li><h4 id="魔方阵（是指组成元素为自然数1，2…n的平方的n×n的方阵，其中每个元素值都不相等，且每行，每列以及主副对角线上各n个元素之和都相等）的排列规律："><a href="#魔方阵（是指组成元素为自然数1，2…n的平方的n×n的方阵，其中每个元素值都不相等，且每行，每列以及主副对角线上各n个元素之和都相等）的排列规律：" class="headerlink" title="魔方阵（是指组成元素为自然数1，2…n的平方的n×n的方阵，其中每个元素值都不相等，且每行，每列以及主副对角线上各n个元素之和都相等）的排列规律："></a>魔方阵（是指组成元素为自然数1，2…n的平方的n×n的方阵，其中每个元素值都不相等，且每行，每列以及主副对角线上各n个元素之和都相等）的排列规律：</h4></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">8</span>  <span class="number">1</span>  <span class="number">6</span></span><br><span class="line"><span class="number">3</span>  <span class="number">5</span>  <span class="number">7</span></span><br><span class="line"><span class="number">4</span>  <span class="number">9</span>  <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>,先给备用数组内所有数赋初值<span class="number">0</span>;(下面的i代表行号，j代表列号)(第<span class="number">1</span>步是为第<span class="number">7</span>步做铺垫)</span><br><span class="line"><span class="number">2</span>,第<span class="number">0</span>行的中间那个数a[i][j]=<span class="number">0</span>,此时i = <span class="number">0</span>,j = n/<span class="number">2</span>;</span><br><span class="line"><span class="number">3</span>,当前的数在首行(i=<span class="number">0</span>)时，下一个数放在最后一行(i=n<span class="number">-1</span>)，j++;</span><br><span class="line"><span class="number">4</span>,当前的数在最后一列(j=n<span class="number">-1</span>)时，下一个数放在第一列(j=<span class="number">0</span>)，i--;</span><br><span class="line"><span class="number">5</span>,如果同时满足了(i=<span class="number">0</span>和j=n<span class="number">-1</span>)，那么进行i=n<span class="number">-1</span>,j=<span class="number">0</span>;</span><br><span class="line"><span class="number">6</span>,如果<span class="number">3.4</span><span class="number">.5</span>都不满足，就进行i--,j++;</span><br><span class="line"><span class="number">7</span>,经过上面<span class="number">3</span>步的判断，找到了新的i和j的值，如果此时a[i][j]放的值是<span class="number">0</span>，代表这地方未被用过，可放下一个数；</span><br><span class="line">如果此时这里放的不是<span class="number">0</span>，代表已经被用过了，那么下一个数就直接放到这个数的前面那个数的的下面（比如本例n=<span class="number">3</span>时：<span class="number">4</span>本该放到a[<span class="number">0</span>][<span class="number">1</span>]的，但a[<span class="number">0</span>][<span class="number">1</span>]被<span class="number">1</span>占了，所以，就直接把<span class="number">4</span>放到<span class="number">4</span>的前面那个数<span class="number">3</span>的下面。）</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="built_in">main</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> i,j,ok,n,m;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">10</span>;i++)                   <span class="comment">/*给备用的数组做初始化*/</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; <span class="number">10</span>;j++)</span><br><span class="line">a[i][j] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">ok = <span class="number">0</span>;                                  <span class="comment">/*限定输入的数必须满足要求*/</span></span><br><span class="line"><span class="keyword">while</span>(ok == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please input a number as the value of n:(必须是10以内的奇数)\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">if</span>(n % <span class="number">2</span> != <span class="number">0</span> &amp;&amp; n &gt; <span class="number">0</span> &amp;&amp; n &lt; <span class="number">10</span> )</span><br><span class="line">ok = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">ok = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">i = <span class="number">0</span>;</span><br><span class="line">j = n/<span class="number">2</span>;</span><br><span class="line">a[i][j] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(m = <span class="number">2</span>;m &lt;= n*n;m++)                  <span class="comment">/*因为1已经放好了，所以我们从2开始放*/</span></span><br><span class="line">&#123;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>((i == <span class="number">0</span>) &amp;&amp; (j != n<span class="number">-1</span>))            <span class="comment">/*算法中的第3步*/</span></span><br><span class="line">&#123;</span><br><span class="line">i = n<span class="number">-1</span>;</span><br><span class="line">j = j+<span class="number">1</span>; </span><br><span class="line"><span class="keyword">if</span>(a[i][j] == <span class="number">0</span>)                  <span class="comment">/*算法中的第7步*/</span></span><br><span class="line">a[i][j] = m;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">i = <span class="number">1</span>;</span><br><span class="line">j = j - <span class="number">1</span>;</span><br><span class="line">a[i][j] = m;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>((i != <span class="number">0</span>) &amp;&amp; (j == n<span class="number">-1</span>))      <span class="comment">/*算法中的第4步*/</span></span><br><span class="line">&#123;</span><br><span class="line">i = i<span class="number">-1</span>;</span><br><span class="line">j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(a[i][j] == <span class="number">0</span>)                <span class="comment">/*算法中的第7步*/</span></span><br><span class="line">a[i][j] = m;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">i = i + <span class="number">1</span>;</span><br><span class="line">j = n - <span class="number">1</span>;</span><br><span class="line">a[i][j] = m;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">else</span> <span class="keyword">if</span>((i == <span class="number">0</span>) &amp;&amp; (j == n<span class="number">-1</span>))       <span class="comment">/*算法中的第5步*/</span></span><br><span class="line">&#123;</span><br><span class="line">i = n<span class="number">-1</span>;</span><br><span class="line">j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(a[i][j] == <span class="number">0</span>)                 <span class="comment">/*算法中的第7步*/</span></span><br><span class="line">a[i][j] = m;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">i = <span class="number">1</span>;</span><br><span class="line">j = n - <span class="number">1</span>;</span><br><span class="line">a[i][j] = m;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">else</span>                                 <span class="comment">/*算法中的第6步*/</span></span><br><span class="line">&#123;</span><br><span class="line">i = i<span class="number">-1</span>;</span><br><span class="line">j = j+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(a[i][j] == <span class="number">0</span>)                 <span class="comment">/*算法中的第7步*/</span></span><br><span class="line">a[i][j] = m;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">i = i + <span class="number">2</span>;</span><br><span class="line">j = j - <span class="number">1</span>;</span><br><span class="line">a[i][j] = m;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d阶魔方阵:\n&quot;</span>,n);</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; n;i++)                        <span class="comment">/*输出数组*/</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%4d&quot;</span>,a[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">————————————————</span><br><span class="line">版权声明：本文为CSDN博主「Fritie」的原创文章，遵循CC <span class="number">4.0</span> BY-SA版权协议，转载请附上原文出处链接及本声明。</span><br><span class="line">原文链接：https:<span class="comment">//blog.csdn.net/leipinyuan/article/details/79090126</span></span><br></pre></td></tr></table></figure><ul><li><h4 id="鞍点flag的用法"><a href="#鞍点flag的用法" class="headerlink" title="鞍点flag的用法"></a>鞍点flag的用法</h4><ul><li><h6 id="鞍点：在二维矩阵中-鞍点是在它所在这一行的最大，在列上是最小的"><a href="#鞍点：在二维矩阵中-鞍点是在它所在这一行的最大，在列上是最小的" class="headerlink" title="鞍点：在二维矩阵中,鞍点是在它所在这一行的最大，在列上是最小的"></a>鞍点：在二维矩阵中,鞍点是在它所在这一行的最大，在列上是最小的</h6></li></ul></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//当需要多次更换矩阵的时候可以定义符号常量</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> M 3</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 3</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//输入数组</span></span><br><span class="line">    <span class="type">int</span> i,j,a[M][N],hangmax,hangmax_j,k,flag;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请依次输入%d*%d的数组元素：\n&quot;</span>,M,N);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;M;i++)</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i][j]);</span><br><span class="line">    <span class="comment">//打印数组</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数组如下:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;M;i++)</span><br><span class="line">    &#123;</span><br><span class="line">         <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%6d&quot;</span>,&amp;a[i][j]);<span class="comment">//6d控制格式，因为有单位也有双位</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;M;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        hangmax=a[i][j];<span class="comment">//先假设第i行的第一个数是最大数</span></span><br><span class="line">        <span class="comment">//比较第i行哪个数最大</span></span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i][j]&gt;hangmax)</span><br><span class="line">            &#123;</span><br><span class="line">                hangmax=a[i][j];</span><br><span class="line">                hangmax_j=j;<span class="comment">//这里必须有变量来接受最大数的纵下标</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//比较第i行最大值是不是在所在列中最小</span></span><br><span class="line">        flag=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;M;k++)<span class="comment">//设新变量k，因为是在一行行比较的大环境下</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[k][hangmax_j]&lt;hangmax)<span class="comment">//这一行的hangmax就不是鞍点</span></span><br><span class="line">                <span class="comment">//标志变量的使用，触发flag，锁定鞍点位置</span></span><br><span class="line">                flag=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag==<span class="number">1</span>)<span class="comment">//如果flag=1，表示有鞍点</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;鞍点是：a[%d][%d]=%d&quot;</span>,i,hangmax_j,max);</span><br><span class="line">            <span class="comment">//二维数组只有一个鞍点，或没有鞍点</span></span><br><span class="line">            <span class="keyword">break</span>;<span class="comment">//这里break的作用：防止flag==0被反复执行，因为有可能第一行存在鞍点之后行数不存在鞍点，那么就为flag=0</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag==<span class="number">0</span>)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;该数组不存在鞍点&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//打印100到200之间的素数</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">is_prime</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//拿2到n-1的数来进行试除</span></span><br><span class="line">    <span class="type">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">2</span>;j&lt;n;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n%j==<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//直接结束函数，不执行这个函数下面的语句</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//if(j==n)</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">100</span>;i&lt;<span class="number">200</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//判断i是不是素数</span></span><br><span class="line">        <span class="comment">//规定不是素数返回0;是素数返回1</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">is_prime</span>(i)==<span class="number">1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="将字符串中ASCII码值最大的放在最前面，"><a href="#将字符串中ASCII码值最大的放在最前面，" class="headerlink" title="将字符串中ASCII码值最大的放在最前面，"></a>将字符串中ASCII码值最大的放在最前面，</h2><h2 id="并使该字符前的原字符顺次向后移动。"><a href="#并使该字符前的原字符顺次向后移动。" class="headerlink" title="并使该字符前的原字符顺次向后移动。"></a>并使该字符前的原字符顺次向后移动。</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> M 30</span></span><br><span class="line"><span class="built_in">main</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> str[M];</span><br><span class="line"><span class="type">int</span> i,max,max_i;</span><br><span class="line"><span class="comment">//输入数组</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;enter a string:&quot;</span>);</span><br><span class="line"><span class="built_in">gets</span>(str);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n the original string:&quot;</span>);</span><br><span class="line"><span class="built_in">puts</span>(str);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="comment">//打印数组</span></span><br><span class="line">max = str[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>;i&lt;M; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (str[i] &gt; max)</span><br><span class="line">&#123;</span><br><span class="line">max = str[i];</span><br><span class="line">max_i = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//不能这样写的原因是如果输入pipiwrr，结果是wpppprr，会覆盖结果</span></span><br><span class="line"><span class="comment">/*for (i = 0; i &lt; max_i; i++)</span></span><br><span class="line"><span class="comment">str[i + 1] = str[i];*/</span></span><br><span class="line">    <span class="keyword">for</span>(i=max_i;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">        str[i+<span class="number">1</span>]=str[i];</span><br><span class="line">str[<span class="number">0</span>] = max;</span><br><span class="line"><span class="built_in">puts</span>(str);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="冒泡法排序"><a href="#冒泡法排序" class="headerlink" title="冒泡法排序"></a>冒泡法排序</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//输入一个正整数n(1&lt;n&lt;=10),再输入n个整数，按绝对值从小到大排序后输出</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10</span></span><br><span class="line"><span class="built_in">main</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a[N] = &#123;<span class="number">0</span>&#125;,n,i,j,max;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入多少个正整数n:\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="comment">//打印一遍</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;打印这个数组:&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;n<span class="number">-1</span>-i;j++)<span class="comment">//冒泡法重点在于趟数与数字数的关系，趟数等于数字数减一</span></span><br><span class="line"><span class="keyword">if</span> (a[j] &gt; a[j + <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">max = a[j];</span><br><span class="line">a[j] = a[j + <span class="number">1</span>];</span><br><span class="line">a[j + <span class="number">1</span>] = max; </span><br><span class="line">&#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;排列后的顺序:\n&quot;</span>)</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//冒泡排序数组中的数字(cong&#x27;x)</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bubble_sort</span><span class="params">(<span class="type">int</span> arr[],<span class="type">int</span> sz)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//确定冒泡排序的趟数</span></span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;sz<span class="number">-1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> flag=<span class="number">1</span>;<span class="comment">//假设这一趟要排序的数据已经有序</span></span><br><span class="line">        <span class="comment">//每一趟冒泡排序</span></span><br><span class="line">        <span class="type">int</span> j=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;sz<span class="number">-1</span>-i;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[j]&gt;arr[j+<span class="number">1</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> temp=arr[j];</span><br><span class="line">                arr[j]=arr[j+<span class="number">1</span>];</span><br><span class="line">                arr[j+<span class="number">1</span>]=temp;</span><br><span class="line">                flag=<span class="number">0</span>;<span class="comment">//本躺排序的数据其实不完全有序</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> arr[]=&#123;<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>&#125;;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> sz=<span class="built_in">sizeof</span>(arr)/<span class="built_in">sizeof</span>(arr[<span class="number">0</span>]);</span><br><span class="line">    <span class="comment">//对arr进行排序，排成升序</span></span><br><span class="line">    <span class="comment">//arr是数组，我们对数组进行传参，真实传递过去的并不是数组本身，而是首元素的地址 &amp;arr[0]</span></span><br><span class="line">    <span class="built_in">bubble_sort</span>(arr);<span class="comment">//冒泡排序函数</span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;sz;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,arr[i])</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="杨辉三角形-要求打印十行"><a href="#杨辉三角形-要求打印十行" class="headerlink" title="杨辉三角形(要求打印十行)"></a>杨辉三角形(要求打印十行)</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span> <span class="number">3</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">4</span> <span class="number">6</span> <span class="number">4</span> <span class="number">1</span></span><br><span class="line">......</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 11</span></span><br><span class="line"><span class="built_in">main</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i,j,a[N][N];</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;N;i++)<span class="comment">//贴切生活，从第一行开始而不从0行开始,列也是如此</span></span><br><span class="line">    &#123;</span><br><span class="line">        a[i][i]=<span class="number">1</span>;</span><br><span class="line">        a[i][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">3</span>;i&lt;N;i++)</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">2</span>;j&lt;=i<span class="number">-1</span>;j++)</span><br><span class="line">            a[i][j]=a[i<span class="number">-1</span>][j<span class="number">-1</span>]+a[i<span class="number">-1</span>][j];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;杨辉三角形:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;N;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;i;j++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>,a[i][j]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure><h2 id="求周边数组元素之和-4行5列"><a href="#求周边数组元素之和-4行5列" class="headerlink" title="求周边数组元素之和(4行5列)"></a>求周边数组元素之和(4行5列)</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> M 4</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 5</span></span><br><span class="line"><span class="built_in">main</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a[M][N]=&#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;&#123;<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>&#125;&#123;<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">4</span>&#125;&#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;&#125;;<span class="comment">//根据需求可以更换数组元素</span></span><br><span class="line">    <span class="type">int</span> i,j,s=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;M;i++)<span class="comment">//打印数组</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%3d&quot;</span>,a[i][j]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;N;j++)<span class="comment">//第一行数组元素加上最后一行数组元素</span></span><br><span class="line">    &#123;</span><br><span class="line">        s=s+a[<span class="number">0</span>][j];</span><br><span class="line">        s+=a[M<span class="number">-1</span>][j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;M<span class="number">-1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s+=a[i][<span class="number">0</span>];<span class="comment">//打印最左边去掉第一行和最后一行的数组元素</span></span><br><span class="line">        s+=a[i][N<span class="number">-1</span>];<span class="comment">//打印最右行去掉第一行和最后一行的数组元素</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="删除有序数组中的相同数"><a href="#删除有序数组中的相同数" class="headerlink" title="删除有序数组中的相同数"></a>删除有序数组中的相同数</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 15</span></span><br><span class="line"><span class="built_in">main</span>()<span class="comment">//第一种方法</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i,j,k=<span class="number">0</span>,b=[N];<span class="comment">//将排除过相同数的数组填到数组b中</span></span><br><span class="line">    <span class="type">int</span> a[<span class="number">15</span>]=&#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">12</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        b[k]=a[i];</span><br><span class="line">        <span class="keyword">for</span>(j=i+<span class="number">1</span>;j&lt;N;j++)<span class="comment">//如果后一个数组元素和前一个不等就把这两个数分别赋给b数组的两个数组元素；如果后一个数组等于前一个数组元素，那么把这两个数组元素赋给b数组的同一个数组元素</span></span><br><span class="line">            <span class="keyword">if</span>(a[i]!=a[j])</span><br><span class="line">            &#123;</span><br><span class="line">                k++;</span><br><span class="line">                <span class="keyword">break</span>;<span class="comment">//跳出内层循环</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">break</span>;<span class="comment">//else和离它最近的没有匹配的if进行匹配</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=k;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i%<span class="number">4</span>==<span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%6d&quot;</span>,b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">main</span>()<span class="comment">//第二种方法，自认为好理解</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i,k=<span class="number">0</span>,n=<span class="number">0</span>,b[N];</span><br><span class="line">    <span class="type">int</span> a[N]=&#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">12</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;N;i++)<span class="comment">//如果后一个数组元素和前一个不等就把这两个数分别赋给b数组的两个数组元素；如果后一个数组等于前一个数组元素，那么把这两个数组元素赋给b数组的同一个数组元素   和第一种方法思想差不多，就是程序书写不一样</span></span><br><span class="line">        <span class="keyword">if</span>(a[i]!=a[i+<span class="number">1</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            b[k]=a[i];</span><br><span class="line">            k++;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;k;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%6d&quot;</span>,b[i]);</span><br><span class="line">        n++;</span><br><span class="line">        <span class="keyword">if</span>(n%<span class="number">4</span>==<span class="number">0</span>)</span><br><span class="line">            <span class="built_in">putchar</span>(<span class="string">&quot;%6d&quot;</span>,b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;n&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="设计一个函数，输入一个4位数字，要求输出这4个数字字符，但每两个数字间空一个空格。例如，输入1990，应输入“1-9-9-0”"><a href="#设计一个函数，输入一个4位数字，要求输出这4个数字字符，但每两个数字间空一个空格。例如，输入1990，应输入“1-9-9-0”" class="headerlink" title="设计一个函数，输入一个4位数字，要求输出这4个数字字符，但每两个数字间空一个空格。例如，输入1990，应输入“1 9 9 0”"></a>设计一个函数，输入一个4位数字，要求输出这4个数字字符，但每两个数字间空一个空格。例如，输入1990，应输入“1 9 9 0”</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="built_in">main</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> str[<span class="number">81</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">char</span> str[])</span></span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input four digits:\n&quot;</span>);</span><br><span class="line"><span class="built_in">gets</span>(str);<span class="comment">//录入数组元素</span></span><br><span class="line"><span class="built_in">insert</span>(str);<span class="comment">//调用函数</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;output digits after insert space:\n&quot;</span>);</span><br><span class="line"><span class="built_in">puts</span>(str);<span class="comment">//输出更改过后的数组</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">char</span> str[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="built_in">strlen</span>(str); i &gt; <span class="number">0</span>; i--)</span><br><span class="line">&#123;</span><br><span class="line">str[<span class="number">2</span> * i] = str[i];<span class="comment">//把数字放在下标为0，2，4，6这几个数组元素中</span></span><br><span class="line">str[<span class="number">2</span> * i - <span class="number">1</span>] = <span class="string">&#x27; &#x27;</span>;<span class="comment">//把空格放在下标为1，3，5，7的数组元素中</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="置换一个字符串中的字符eg-werty置换成ytrew"><a href="#置换一个字符串中的字符eg-werty置换成ytrew" class="headerlink" title="置换一个字符串中的字符eg.werty置换成ytrew"></a>置换一个字符串中的字符eg.werty置换成ytrew</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> M 5<span class="comment">//定义大小最好定义大一点</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">fun</span><span class="params">(<span class="type">char</span> a[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> j, k;</span><br><span class="line"><span class="type">char</span> temp;</span><br><span class="line">k = <span class="built_in">strlen</span>(a) - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= k; j++)<span class="comment">//第一个和最后一个互换，第二个和倒数第二个互换...</span></span><br><span class="line">&#123;</span><br><span class="line">temp = a[j];</span><br><span class="line">a[j] = a[k];</span><br><span class="line">a[k] = temp;</span><br><span class="line">k--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">main</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> a[M];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;置换前的字符串:\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, a);<span class="comment">//直接打印一个字符串</span></span><br><span class="line"><span class="built_in">fun</span>(a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;置换后的字符串:\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="描述第n个斐波那契数-函数的递归与迭代"><a href="#描述第n个斐波那契数-函数的递归与迭代" class="headerlink" title="描述第n个斐波那契数(函数的递归与迭代)"></a>描述第n个斐波那契数(函数的递归与迭代)</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1  1  2  3  5  8  13  21  34  55... </span></span><br><span class="line"><span class="comment">/*用递归来写效率非常低</span></span><br><span class="line"><span class="comment">int Fib()</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">    if(n&lt;=2)</span></span><br><span class="line"><span class="comment">        return 1;</span></span><br><span class="line"><span class="comment">    else</span></span><br><span class="line"><span class="comment">        return Fib(n-1)+Fib(n-2)</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//用迭代来写,用三个变量不断赋值</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Fib</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a=<span class="number">1</span>;<span class="comment">//前两个斐波那契数</span></span><br><span class="line">    <span class="type">int</span> b=<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> c=<span class="number">1</span>;<span class="comment">//如果求前两个斐波那契数，直接return 1，不进循环</span></span><br><span class="line">    <span class="comment">//只有从第三个数开始才用这个方法</span></span><br><span class="line">    <span class="keyword">while</span>(n&gt;=<span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        c=a+b;</span><br><span class="line">        a=b;</span><br><span class="line">        b=c;</span><br><span class="line">        n--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> ret=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="comment">//递归方法：</span></span><br><span class="line">    <span class="comment">//Fib&lt;=2时为1</span></span><br><span class="line">    <span class="comment">//Fib&gt;2时为Fib(n-1)+Fib(n-2)</span></span><br><span class="line">    ret=<span class="built_in">Fib</span>(n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;ret=%d\n&quot;</span>,ret);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="汉诺塔问题"><a href="#汉诺塔问题" class="headerlink" title="汉诺塔问题"></a>汉诺塔问题</h2><h4 id="三个柱子，第一个上面有几个从小到大的圆盘，要求按原顺序移动到另一个柱子上，一次只能挪1个，最少需要几步？"><a href="#三个柱子，第一个上面有几个从小到大的圆盘，要求按原顺序移动到另一个柱子上，一次只能挪1个，最少需要几步？" class="headerlink" title="(三个柱子，第一个上面有几个从小到大的圆盘，要求按原顺序移动到另一个柱子上，一次只能挪1个，最少需要几步？)"></a>(三个柱子，第一个上面有几个从小到大的圆盘，要求按原顺序移动到另一个柱子上，一次只能挪1个，最少需要几步？)</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 青蛙跳台问题</span><br><span class="line"></span><br><span class="line">#### (n个台阶，<span class="number">1</span>次可以跳一个台阶，也可以跳两个台阶，这只青蛙要跳到第n个台阶上，有多少种跳法）</span><br><span class="line"></span><br><span class="line">## 用人民币一元兑换<span class="number">1</span>分，<span class="number">2</span>分，<span class="number">5</span>分硬币，共有多少种不同换法</span><br><span class="line"></span><br><span class="line">```c++</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="built_in">main</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> c1, c2, c5, cnt = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;1元硬币有以下兑换方法：&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(c1=<span class="number">0</span>;c1&lt;=<span class="number">100</span>;c1++)</span><br><span class="line"><span class="keyword">for</span>(c2=<span class="number">0</span>;c2&lt;=<span class="number">50</span>;c2++)</span><br><span class="line"><span class="keyword">for</span>(c5=<span class="number">0</span>;c5&lt;=<span class="number">20</span>;c5++)</span><br><span class="line"><span class="keyword">if</span> (c1 * <span class="number">1</span> + c2 * <span class="number">2</span> + c5 * <span class="number">5</span> == <span class="number">100</span>) </span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%3d个1分硬币，%3d个2分硬币，%3d个5分硬币\n&quot;</span>, c1, c2, c5);</span><br><span class="line">cnt++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;共有%d种方法\n&quot;</span>, cnt);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="请编写函数-将含有数字的字符串-实现将字符串中从左至右的数字提出并按提出顺序组成一个新的整型数据。-要求使用字符数组和字符指针来实现"><a href="#请编写函数-将含有数字的字符串-实现将字符串中从左至右的数字提出并按提出顺序组成一个新的整型数据。-要求使用字符数组和字符指针来实现" class="headerlink" title="请编写函数,将含有数字的字符串,实现将字符串中从左至右的数字提出并按提出顺序组成一个新的整型数据。 (要求使用字符数组和字符指针来实现)"></a>请编写函数,将含有数字的字符串,实现将字符串中从左至右的数字提出并按提出顺序组成一个新的整型数据。 (要求使用字符数组和字符指针来实现)</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span> </span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">char</span> *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t,s=<span class="number">0</span>; </span><br><span class="line"><span class="keyword">while</span> (*p)  </span><br><span class="line">&#123;<span class="keyword">if</span> ((*p)&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp;(*p)&lt;=<span class="string">&#x27;9&#x27;</span>)  </span><br><span class="line">  &#123;</span><br><span class="line">    t=(*p)-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    s=s*<span class="number">10</span>+t;  <span class="comment">//*10的目的，让数组中的数字，从大到小依次对于这个新的整形数据的各十百千...位</span></span><br><span class="line">  &#125; </span><br><span class="line">p++;&#125; </span><br><span class="line"><span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">main</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">char</span> s[<span class="number">80</span>]; </span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;请输入一串含有数字的字符串:\n&quot;</span>);</span><br><span class="line">  <span class="built_in">gets</span>(s);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;字符串%s中的数字字符组成的整数为:\n&quot;</span>,s);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="built_in">find</span>(s));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="输入一个八进制数字字符串，函数convert将其转换成十进制数后输出"><a href="#输入一个八进制数字字符串，函数convert将其转换成十进制数后输出" class="headerlink" title="输入一个八进制数字字符串，函数convert将其转换成十进制数后输出"></a>输入一个八进制数字字符串，函数convert将其转换成十进制数后输出</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">convert</span><span class="params">(<span class="type">char</span> *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">int</span> n=<span class="number">0</span>,a[<span class="number">6</span>]; </span><br><span class="line">    <span class="keyword">while</span>(*p) </span><br><span class="line">    &#123; </span><br><span class="line">      n=n*<span class="number">8</span>+*p-<span class="string">&#x27;0&#x27;</span>;<span class="comment">//进制转换 </span></span><br><span class="line">      p++;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">main</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> s[<span class="number">6</span>];</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入一个8进制数字的字符串: &quot;</span>);</span><br><span class="line"><span class="built_in">gets</span>(s);</span><br><span class="line">a=<span class="built_in">convert</span>(s);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*采用的具体方法是余除法，例如八进制数12，取余分解出最低位为2，再乘以相应的权重，由于是最低位，所以权重是8的0次方=1；再用12/10，进行下一轮循环，取余分解出最低位1，再乘以相应的权重，权重为8的一次方=8，累加起来为2+8=10，所以相对于的十进制数为10*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Trans</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(n)</span><br><span class="line">    &#123;</span><br><span class="line">        sum+=(n%<span class="number">10</span>)*<span class="built_in">pow</span>(<span class="number">8</span>,i++);</span><br><span class="line">        n/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">main</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入一个八进制数:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;转化为十进制数为:&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,<span class="built_in">Trans</span>(n));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="调用函数用指针实现将某字符串复制到一个空字符串的功能（要求在主函数中输入字符串，并输出复制后的结果）"><a href="#调用函数用指针实现将某字符串复制到一个空字符串的功能（要求在主函数中输入字符串，并输出复制后的结果）" class="headerlink" title="调用函数用指针实现将某字符串复制到一个空字符串的功能（要求在主函数中输入字符串，并输出复制后的结果）"></a>调用函数用指针实现将某字符串复制到一个空字符串的功能（要求在主函数中输入字符串，并输出复制后的结果）</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">fun</span><span class="params">(<span class="type">char</span> *s,<span class="type">char</span> *t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(*s!=<span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        *t++=*s++;<span class="comment">//使每个数组元素都复制到空zi&#x27;fu</span></span><br><span class="line">    &#125;</span><br><span class="line">    *t=<span class="string">&#x27;\0&#x27;</span>;<span class="comment">//使复制完成后以\0结尾，方便打印</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">main</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> s1[<span class="number">100</span>],s2[<span class="number">100</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;input s1:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">gets</span>(s1);</span><br><span class="line">    <span class="built_in">fun</span>(s1,s2);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;s2 is %s\n&quot;</span>,s2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="输出1到100之内共有多少个完数（完数是指一个数的因子之和等于这个数本身，例如6-1-2-3-那么6就是一个完数）"><a href="#输出1到100之内共有多少个完数（完数是指一个数的因子之和等于这个数本身，例如6-1-2-3-那么6就是一个完数）" class="headerlink" title="输出1到100之内共有多少个完数（完数是指一个数的因子之和等于这个数本身，例如6=1+2+3 那么6就是一个完数）"></a>输出1到100之内共有多少个完数（完数是指一个数的因子之和等于这个数本身，例如6=1+2+3 那么6就是一个完数）</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">fun</span><span class="params">(<span class="type">int</span> N)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i,x,sum=<span class="number">0</span>,n=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(x=<span class="number">1</span>;x&lt;=N;x++)<span class="comment">//检测1到100之内的数，x是要检测的数，n是1到100中完数的个数</span></span><br><span class="line">    &#123;</span><br><span class="line">        sum=<span class="number">0</span>;<span class="comment">//每次循环都要归零</span></span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;x;i++)<span class="comment">//用i试除看此时的i是不是x的因数</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(x%i==<span class="number">0</span>)<span class="comment">//说明此时i是x的因数</span></span><br><span class="line">                sum+=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(x==sum)<span class="comment">//判断因字数之和等不等于其本身(注意这个if条件语句的位置)</span></span><br><span class="line">            n++;</span><br><span class="line">    &#125;</span><br><span class="line">    returm n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">main</span>()</span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> sum=<span class="number">0</span>,M=<span class="number">100</span>; <span class="function"><span class="type">void</span> <span class="title">NONO</span><span class="params">()</span></span>;</span><br><span class="line">  sum=<span class="built_in">fun</span>(M);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;共有完数个数为:%d\n&quot;</span>,sum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;C-C-的学习TEXT&quot;&gt;&lt;a href=&quot;#C-C-的学习TEXT&quot; class=&quot;headerlink&quot; title=&quot;C/C++的学习TEXT&quot;&gt;&lt;/a&gt;C/C++的学习TEXT&lt;/h1&gt;&lt;h2 id=&quot;避免累积乘的问题（for循环嵌套）&quot;&gt;&lt;a href=</summary>
      
    
    
    
    <category term="C语言基础笔记" scheme="https://love.pipi1002.fun/categories/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
</feed>
